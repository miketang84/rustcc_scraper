https://github.com/giuseppe-g-gelardi/cargobase
-->>-->>
Skip to content {"props":{"docsUrl":"https://docs.github.com/get-started/accessibility/keyboard-shortcuts"}} {"resolvedServerColorMode":"day"} Navigation Menu Toggle navigation Sign in Product GitHub Copilot Write better code with AI Security Find and fix vulnerabilities Actions Automate any workflow Codespaces Instant dev environments Issues Plan and track work Code Review Manage code changes Discussions Collaborate outside of code Code Search Find more, search less Explore All features Documentation GitHub Skills Blog Solutions By company size Enterprises Small and medium teams Startups By use case DevSecOps DevOps CI/CD View all use cases By industry Healthcare Financial services Manufacturing Government View all industries View all solutions Resources Topics AI DevOps Security Software Development View all Explore Learning Pathways White papers, Ebooks, Webinars Customer Stories Partners Open Source GitHub Sponsors Fund open source developers The ReadME Project GitHub community articles Repositories Topics Trending Collections Enterprise Enterprise platform AI-powered developer platform Available add-ons Advanced Security Enterprise-grade security features GitHub Copilot Enterprise-grade AI features Premium Support Enterprise-grade 24/7 support Pricing Search or jump to... Search code, repositories, users, issues, pull requests... Search Clear Search syntax tips Provide feedback We read every piece of feedback, and take your input very seriously. Include my email address so I can be contacted Cancel Submit feedback Saved searches Use saved searches to filter your results more quickly Name Query To see all available qualifiers, see our documentation . Cancel Create saved search Sign in Sign up Reseting focus You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session. You switched accounts on another tab or window. Reload to refresh your session. Dismiss alert {{ message }} giuseppe-g-gelardi / cargobase Public Notifications You must be signed in to change notification settings Fork 0 Star 0 License MIT license 0 stars 0 forks Branches Tags Activity Star Notifications You must be signed in to change notification settings Code Issues 0 Pull requests 1 Actions Projects 0 Security Insights Additional navigation options Code Issues Pull requests Actions Projects Security Insights giuseppe-g-gelardi/cargobase {"props":{"initialPayload":{"allShortcutsEnabled":false,"path":"/","repo":{"id":887649191,"defaultBranch":"main","name":"cargobase","ownerLogin":"giuseppe-g-gelardi","currentUserCanPush":false,"isFork":false,"isEmpty":false,"createdAt":"2024-11-13T03:25:03.000Z","ownerAvatar":"https://avatars.githubusercontent.com/u/77517975?v=4","public":true,"private":false,"isOrgOwned":false},"currentUser":null,"refInfo":{"name":"main","listCacheKey":"v0:1731875079.0","canEdit":false,"refType":"branch","currentOid":"71415f245f1085528e2c5004407aad2c35223a93"},"tree":{"items":[{"name":".github/workflows","path":".github/workflows","contentType":"directory","hasSimplifiedPath":true},{"name":"src","path":"src","contentType":"directory"},{"name":".gitignore","path":".gitignore","contentType":"file"},{"name":"Cargo.toml","path":"Cargo.toml","contentType":"file"},{"name":"LICENSE","path":"LICENSE","contentType":"file"},{"name":"README.md","path":"README.md","contentType":"file"}],"templateDirectorySuggestionUrl":null,"readme":null,"totalCount":6,"showBranchInfobar":false},"fileTree":null,"fileTreeProcessingTime":null,"foldersToFetch":[],"treeExpanded":false,"symbolsExpanded":false,"isOverview":true,"overview":{"banners":{"shouldRecommendReadme":false,"isPersonalRepo":false,"showUseActionBanner":false,"actionSlug":null,"actionId":null,"showProtectBranchBanner":false,"publishBannersInfo":{"dismissActionNoticePath":"/settings/dismiss-notice/publish_action_from_repo","releasePath":"/giuseppe-g-gelardi/cargobase/releases/new?marketplace=true","showPublishActionBanner":false},"interactionLimitBanner":null,"showInvitationBanner":false,"inviterName":null,"actionsMigrationBannerInfo":{"releaseTags":[],"showImmutableActionsMigrationBanner":false,"initialMigrationStatus":null}},"codeButton":{"contactPath":"/contact","isEnterprise":false,"local":{"protocolInfo":{"httpAvailable":true,"sshAvailable":null,"httpUrl":"https://github.com/giuseppe-g-gelardi/cargobase.git","showCloneWarning":null,"sshUrl":null,"sshCertificatesRequired":null,"sshCertificatesAvailable":null,"ghCliUrl":"gh repo clone giuseppe-g-gelardi/cargobase","defaultProtocol":"http","newSshKeyUrl":"/settings/ssh/new","setProtocolPath":"/users/set_protocol"},"platformInfo":{"cloneUrl":"https://desktop.github.com","showVisualStudioCloneButton":false,"visualStudioCloneUrl":"https://windows.github.com","showXcodeCloneButton":false,"xcodeCloneUrl":"xcode://clone?repo=https%3A%2F%2Fgithub.com%2Fgiuseppe-g-gelardi%2Fcargobase","zipballUrl":"/giuseppe-g-gelardi/cargobase/archive/refs/heads/main.zip"}},"newCodespacePath":"/codespaces/new?hide_repo_select=true\u0026repo=887649191"},"popovers":{"rename":null,"renamedParentRepo":null},"commitCount":"27","overviewFiles":[{"displayName":"README.md","repoName":"cargobase","refName":"main","path":"README.md","preferredFileType":"readme","tabName":"README","richText":"\u003carticle class=\"markdown-body entry-content container-lg\" itemprop=\"text\"\u003e\u003cp dir=\"auto\"\u003ecargobase\u003c/p\u003e\n\u003cp dir=\"auto\"\u003ea simple json database for local development in rust\u003c/p\u003e\n\u003c/article\u003e","loaded":true,"timedOut":false,"errorMessage":null,"headerInfo":{"toc":null,"siteNavLoginPath":"/login?return_to=https%3A%2F%2Fgithub.com%2Fgiuseppe-g-gelardi%2Fcargobase"}},{"displayName":"LICENSE","repoName":"cargobase","refName":"main","path":"LICENSE","preferredFileType":"license","tabName":"MIT","richText":null,"loaded":false,"timedOut":false,"errorMessage":null,"headerInfo":{"toc":null,"siteNavLoginPath":"/login?return_to=https%3A%2F%2Fgithub.com%2Fgiuseppe-g-gelardi%2Fcargobase"}}],"overviewFilesProcessingTime":0}},"appPayload":{"helpUrl":"https://docs.github.com","findFileWorkerPath":"/assets-cdn/worker/find-file-worker-1583894afd38.js","findInFileWorkerPath":"/assets-cdn/worker/find-in-file-worker-67668e8c2caa.js","githubDevUrl":null,"enabled_features":{"code_nav_ui_events":false,"overview_shared_code_dropdown_button":false,"react_blob_overlay":false,"copilot_conversational_ux_embedding_update":false,"copilot_smell_icebreaker_ux":true,"copilot_workspace":false,"blob_edit_unsaved_changes_storage":true,"accessible_code_button":true}}}} main Branches Tags Go to file Code Folders and files Name Name Last commit message Last commit date Latest commit History 27 Commits .github/ workflows .github/ workflows src src .gitignore .gitignore Cargo.toml Cargo.toml LICENSE LICENSE README.md README.md View all files Repository files navigation README MIT license cargobase a simple json database for local development in rust {"resolvedServerColorMode":"day"} About No description, website, or topics provided. Resources Readme License MIT license Activity Stars 0 stars Watchers 1 watching Forks 0 forks Report repository Releases No releases published Packages 0 No packages published Languages Rust 100.0% Footer © 2024 GitHub, Inc. Footer navigation Terms Privacy Security Status Docs Contact Manage cookies Do not share my personal information You can’t perform that action at this time.

======>
https://huggingface.co/starlight-ai
-->>-->>
Starlight Search company https://www.starlight-search.com StarlightSearch Follow 2 AI & ML interests None defined yet. Team members 2 Organization Card Community About org cards Edit this README.md markdown file to author your organization card. models 1 starlight-ai/colpali-v1.2-merged-onnx Updated 3 days ago datasets None public yet
======>
https://github.com/alysonhower/tauri2-svelte5-boilerplate
-->>-->>
Skip to content {"props":{"docsUrl":"https://docs.github.com/get-started/accessibility/keyboard-shortcuts"}} {"resolvedServerColorMode":"day"} Navigation Menu Toggle navigation Sign in Product GitHub Copilot Write better code with AI Security Find and fix vulnerabilities Actions Automate any workflow Codespaces Instant dev environments Issues Plan and track work Code Review Manage code changes Discussions Collaborate outside of code Code Search Find more, search less Explore All features Documentation GitHub Skills Blog Solutions By company size Enterprises Small and medium teams Startups By use case DevSecOps DevOps CI/CD View all use cases By industry Healthcare Financial services Manufacturing Government View all industries View all solutions Resources Topics AI DevOps Security Software Development View all Explore Learning Pathways White papers, Ebooks, Webinars Customer Stories Partners Open Source GitHub Sponsors Fund open source developers The ReadME Project GitHub community articles Repositories Topics Trending Collections Enterprise Enterprise platform AI-powered developer platform Available add-ons Advanced Security Enterprise-grade security features GitHub Copilot Enterprise-grade AI features Premium Support Enterprise-grade 24/7 support Pricing Search or jump to... Search code, repositories, users, issues, pull requests... Search Clear Search syntax tips Provide feedback We read every piece of feedback, and take your input very seriously. Include my email address so I can be contacted Cancel Submit feedback Saved searches Use saved searches to filter your results more quickly Name Query To see all available qualifiers, see our documentation . Cancel Create saved search Sign in Sign up Reseting focus You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session. You switched accounts on another tab or window. Reload to refresh your session. Dismiss alert {{ message }} alysonhower / tauri2-svelte5-boilerplate Public Notifications You must be signed in to change notification settings Fork 8 Star 45 A clean desktop application template that combines Tauri 2 with Svelte 5 + DaisyUI, including automated CI/CD pipelines for Windows, Linux, and Mac builds. License MIT license 45 stars 8 forks Branches Tags Activity Star Notifications You must be signed in to change notification settings Code Issues 0 Pull requests 0 Actions Projects 0 Security Insights Additional navigation options Code Issues Pull requests Actions Projects Security Insights alysonhower/tauri2-svelte5-boilerplate {"props":{"initialPayload":{"allShortcutsEnabled":false,"path":"/","repo":{"id":875370162,"defaultBranch":"main","name":"tauri2-svelte5-boilerplate","ownerLogin":"alysonhower","currentUserCanPush":false,"isFork":false,"isEmpty":false,"createdAt":"2024-10-19T19:41:04.000Z","ownerAvatar":"https://avatars.githubusercontent.com/u/102027527?v=4","public":true,"private":false,"isOrgOwned":false},"currentUser":null,"refInfo":{"name":"main","listCacheKey":"v0:1731708861.0","canEdit":false,"refType":"branch","currentOid":"7fd3ac472d5a92f90af1506790ddf9d0455997b4"},"tree":{"items":[{"name":".github","path":".github","contentType":"directory"},{"name":".vscode","path":".vscode","contentType":"directory"},{"name":"src-tauri","path":"src-tauri","contentType":"directory"},{"name":"src","path":"src","contentType":"directory"},{"name":"static","path":"static","contentType":"directory"},{"name":".gitignore","path":".gitignore","contentType":"file"},{"name":".npmrc","path":".npmrc","contentType":"file"},{"name":".prettierignore","path":".prettierignore","contentType":"file"},{"name":".prettierrc","path":".prettierrc","contentType":"file"},{"name":"CHANGES.md","path":"CHANGES.md","contentType":"file"},{"name":"LICENSE","path":"LICENSE","contentType":"file"},{"name":"README.md","path":"README.md","contentType":"file"},{"name":"bun.lockb","path":"bun.lockb","contentType":"file"},{"name":"package.json","path":"package.json","contentType":"file"},{"name":"postcss.config.js","path":"postcss.config.js","contentType":"file"},{"name":"svelte.config.js","path":"svelte.config.js","contentType":"file"},{"name":"tailwind.config.ts","path":"tailwind.config.ts","contentType":"file"},{"name":"tsconfig.json","path":"tsconfig.json","contentType":"file"},{"name":"vite.config.ts","path":"vite.config.ts","contentType":"file"}],"templateDirectorySuggestionUrl":null,"readme":null,"totalCount":19,"showBranchInfobar":false},"fileTree":null,"fileTreeProcessingTime":null,"foldersToFetch":[],"treeExpanded":false,"symbolsExpanded":false,"isOverview":true,"overview":{"banners":{"shouldRecommendReadme":false,"isPersonalRepo":false,"showUseActionBanner":false,"actionSlug":null,"actionId":null,"showProtectBranchBanner":false,"publishBannersInfo":{"dismissActionNoticePath":"/settings/dismiss-notice/publish_action_from_repo","releasePath":"/alysonhower/tauri2-svelte5-boilerplate/releases/new?marketplace=true","showPublishActionBanner":false},"interactionLimitBanner":null,"showInvitationBanner":false,"inviterName":null,"actionsMigrationBannerInfo":{"releaseTags":[],"showImmutableActionsMigrationBanner":false,"initialMigrationStatus":null}},"codeButton":{"contactPath":"/contact","isEnterprise":false,"local":{"protocolInfo":{"httpAvailable":true,"sshAvailable":null,"httpUrl":"https://github.com/alysonhower/tauri2-svelte5-boilerplate.git","showCloneWarning":null,"sshUrl":null,"sshCertificatesRequired":null,"sshCertificatesAvailable":null,"ghCliUrl":"gh repo clone alysonhower/tauri2-svelte5-boilerplate","defaultProtocol":"http","newSshKeyUrl":"/settings/ssh/new","setProtocolPath":"/users/set_protocol"},"platformInfo":{"cloneUrl":"https://desktop.github.com","showVisualStudioCloneButton":false,"visualStudioCloneUrl":"https://windows.github.com","showXcodeCloneButton":false,"xcodeCloneUrl":"xcode://clone?repo=https%3A%2F%2Fgithub.com%2Falysonhower%2Ftauri2-svelte5-boilerplate","zipballUrl":"/alysonhower/tauri2-svelte5-boilerplate/archive/refs/heads/main.zip"}},"newCodespacePath":"/codespaces/new?hide_repo_select=true\u0026repo=875370162"},"popovers":{"rename":null,"renamedParentRepo":null},"commitCount":"8","overviewFiles":[{"displayName":"README.md","repoName":"tauri2-svelte5-boilerplate","refName":"main","path":"README.md","preferredFileType":"readme","tabName":"README","richText":"\u003carticle class=\"markdown-body entry-content container-lg\" itemprop=\"text\"\u003e\u003cdiv class=\"markdown-heading\" dir=\"auto\"\u003e\u003ch1 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"\u003eTauri 2 Svelte 5 Boilerplate\u003c/h1\u003e\u003ca id=\"user-content-tauri-2-svelte-5-boilerplate\" class=\"anchor\" aria-label=\"Permalink: Tauri 2 Svelte 5 Boilerplate\" href=\"#tauri-2-svelte-5-boilerplate\"\u003e\u003csvg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"\u003e\u003cpath d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/div\u003e\n\u003cp dir=\"auto\"\u003eSimple boilerplate for Tauri 2 with Svelte 5 (and DaisyUI) using Bun runtime.\u003c/p\u003e\n\u003cdiv class=\"markdown-heading\" dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"\u003eRequirements\u003c/h2\u003e\u003ca id=\"user-content-requirements\" class=\"anchor\" aria-label=\"Permalink: Requirements\" href=\"#requirements\"\u003e\u003csvg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"\u003e\u003cpath d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/div\u003e\n\u003cp dir=\"auto\"\u003eIn order to run this boilerplate, you need to install Bun and Rust. If you are on Windows I also recommend installing MSVC before the other dependencies (make sure to check the \"Desktop development with C++\" workload).\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eSome useful links:\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003e\u003ca href=\"https://bun.sh/docs/installation\" rel=\"nofollow\"\u003ehttps://bun.sh/docs/installation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.rust-lang.org/tools/install\" rel=\"nofollow\"\u003ehttps://www.rust-lang.org/tools/install\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://visualstudio.microsoft.com/vs/community/\" rel=\"nofollow\"\u003ehttps://visualstudio.microsoft.com/vs/community/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"markdown-heading\" dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"\u003eSetup\u003c/h2\u003e\u003ca id=\"user-content-setup\" class=\"anchor\" aria-label=\"Permalink: Setup\" href=\"#setup\"\u003e\u003csvg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"\u003e\u003cpath d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/div\u003e\n\u003cdiv class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"git clone https://github.com/alysonhower/tauri2-svelte5-boilerplate.git\ncd tauri2-svelte5-boilerplate\nbun i\"\u003e\u003cpre class=\"notranslate\"\u003e\u003ccode\u003egit clone https://github.com/alysonhower/tauri2-svelte5-boilerplate.git\ncd tauri2-svelte5-boilerplate\nbun i\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv class=\"markdown-heading\" dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"\u003eUseful commands\u003c/h2\u003e\u003ca id=\"user-content-useful-commands\" class=\"anchor\" aria-label=\"Permalink: Useful commands\" href=\"#useful-commands\"\u003e\u003csvg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"\u003e\u003cpath d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/div\u003e\n\u003cdiv class=\"markdown-heading\" dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"\u003eStart dev server\u003c/h3\u003e\u003ca id=\"user-content-start-dev-server\" class=\"anchor\" aria-label=\"Permalink: Start dev server\" href=\"#start-dev-server\"\u003e\u003csvg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"\u003e\u003cpath d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/div\u003e\n\u003cdiv class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"bun run tauri dev\"\u003e\u003cpre class=\"notranslate\"\u003e\u003ccode\u003ebun run tauri dev\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv class=\"markdown-heading\" dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"\u003eBuild executable\u003c/h3\u003e\u003ca id=\"user-content-build-executable\" class=\"anchor\" aria-label=\"Permalink: Build executable\" href=\"#build-executable\"\u003e\u003csvg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"\u003e\u003cpath d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/div\u003e\n\u003cdiv class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"bun run tauri build\"\u003e\u003cpre class=\"notranslate\"\u003e\u003ccode\u003ebun run tauri build\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv class=\"markdown-heading\" dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"\u003eOther links\u003c/h2\u003e\u003ca id=\"user-content-other-links\" class=\"anchor\" aria-label=\"Permalink: Other links\" href=\"#other-links\"\u003e\u003csvg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"\u003e\u003cpath d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/div\u003e\n\u003cdiv class=\"markdown-heading\" dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"\u003eSvelte 5\u003c/h3\u003e\u003ca id=\"user-content-svelte-5\" class=\"anchor\" aria-label=\"Permalink: Svelte 5\" href=\"#svelte-5\"\u003e\u003csvg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"\u003e\u003cpath d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/div\u003e\n\u003cp dir=\"auto\"\u003e\u003ca href=\"https://svelte.dev/docs\" rel=\"nofollow\"\u003ehttps://svelte.dev/docs\u003c/a\u003e\u003c/p\u003e\n\u003cdiv class=\"markdown-heading\" dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"\u003eTauri 2\u003c/h3\u003e\u003ca id=\"user-content-tauri-2\" class=\"anchor\" aria-label=\"Permalink: Tauri 2\" href=\"#tauri-2\"\u003e\u003csvg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"\u003e\u003cpath d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/div\u003e\n\u003cp dir=\"auto\"\u003e\u003ca href=\"https://tauri.app/start/\" rel=\"nofollow\"\u003ehttps://tauri.app/start/\u003c/a\u003e\u003c/p\u003e\n\u003cdiv class=\"markdown-heading\" dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"\u003eDaisyUI\u003c/h3\u003e\u003ca id=\"user-content-daisyui\" class=\"anchor\" aria-label=\"Permalink: DaisyUI\" href=\"#daisyui\"\u003e\u003csvg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"\u003e\u003cpath d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/div\u003e\n\u003cp dir=\"auto\"\u003e\u003ca href=\"https://daisyui.com/docs/\" rel=\"nofollow\"\u003ehttps://daisyui.com/docs/\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eNote: Boilerplate tested on Windows 11 only.\u003c/p\u003e\n\u003cdiv class=\"markdown-heading\" dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"\u003eLicense\u003c/h2\u003e\u003ca id=\"user-content-license\" class=\"anchor\" aria-label=\"Permalink: License\" href=\"#license\"\u003e\u003csvg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"\u003e\u003cpath d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/div\u003e\n\u003cp dir=\"auto\"\u003eThis project is licensed under the MIT License - see the \u003ca href=\"/alysonhower/tauri2-svelte5-boilerplate/blob/main/LICENSE\"\u003eLICENSE\u003c/a\u003e file for details.\u003c/p\u003e\n\u003c/article\u003e","loaded":true,"timedOut":false,"errorMessage":null,"headerInfo":{"toc":[{"level":1,"text":"Tauri 2 Svelte 5 Boilerplate","anchor":"tauri-2-svelte-5-boilerplate","htmlText":"Tauri 2 Svelte 5 Boilerplate"},{"level":2,"text":"Requirements","anchor":"requirements","htmlText":"Requirements"},{"level":2,"text":"Setup","anchor":"setup","htmlText":"Setup"},{"level":2,"text":"Useful commands","anchor":"useful-commands","htmlText":"Useful commands"},{"level":3,"text":"Start dev server","anchor":"start-dev-server","htmlText":"Start dev server"},{"level":3,"text":"Build executable","anchor":"build-executable","htmlText":"Build executable"},{"level":2,"text":"Other links","anchor":"other-links","htmlText":"Other links"},{"level":3,"text":"Svelte 5","anchor":"svelte-5","htmlText":"Svelte 5"},{"level":3,"text":"Tauri 2","anchor":"tauri-2","htmlText":"Tauri 2"},{"level":3,"text":"DaisyUI","anchor":"daisyui","htmlText":"DaisyUI"},{"level":2,"text":"License","anchor":"license","htmlText":"License"}],"siteNavLoginPath":"/login?return_to=https%3A%2F%2Fgithub.com%2Falysonhower%2Ftauri2-svelte5-boilerplate"}},{"displayName":"LICENSE","repoName":"tauri2-svelte5-boilerplate","refName":"main","path":"LICENSE","preferredFileType":"license","tabName":"MIT","richText":null,"loaded":false,"timedOut":false,"errorMessage":null,"headerInfo":{"toc":null,"siteNavLoginPath":"/login?return_to=https%3A%2F%2Fgithub.com%2Falysonhower%2Ftauri2-svelte5-boilerplate"}}],"overviewFilesProcessingTime":0}},"appPayload":{"helpUrl":"https://docs.github.com","findFileWorkerPath":"/assets-cdn/worker/find-file-worker-1583894afd38.js","findInFileWorkerPath":"/assets-cdn/worker/find-in-file-worker-67668e8c2caa.js","githubDevUrl":null,"enabled_features":{"code_nav_ui_events":false,"overview_shared_code_dropdown_button":false,"react_blob_overlay":false,"copilot_conversational_ux_embedding_update":false,"copilot_smell_icebreaker_ux":true,"copilot_workspace":false,"blob_edit_unsaved_changes_storage":true,"accessible_code_button":true}}}} main 1 Branch 1 Tag Go to file Code Folders and files Name Name Last commit message Last commit date Latest commit alysonhower feat: add MIT license and update project metadata Nov 17, 2024 7fd3ac4 · Nov 17, 2024 History 8 Commits .github .github feat: add MIT license and update project metadata Nov 17, 2024 .vscode .vscode feat: update deps & implement basic ci/cd config Nov 15, 2024 src-tauri src-tauri feat: add MIT license and update project metadata Nov 17, 2024 src src fix: data-theme attribute on wrong element Nov 8, 2024 static static first commit Oct 19, 2024 .gitignore .gitignore first commit Oct 19, 2024 .npmrc .npmrc first commit Oct 19, 2024 .prettierignore .prettierignore first commit Oct 19, 2024 .prettierrc .prettierrc first commit Oct 19, 2024 CHANGES.md CHANGES.md feat: update deps & implement basic ci/cd config Nov 15, 2024 LICENSE LICENSE feat: add MIT license and update project metadata Nov 17, 2024 README.md README.md feat: add MIT license and update project metadata Nov 17, 2024 bun.lockb bun.lockb feat: update deps & implement basic ci/cd config Nov 15, 2024 package.json package.json feat: add MIT license and update project metadata Nov 17, 2024 postcss.config.js postcss.config.js first commit Oct 19, 2024 svelte.config.js svelte.config.js first commit Oct 19, 2024 tailwind.config.ts tailwind.config.ts first commit Oct 19, 2024 tsconfig.json tsconfig.json first commit Oct 19, 2024 vite.config.ts vite.config.ts first commit Oct 19, 2024 View all files Repository files navigation README MIT license Tauri 2 Svelte 5 Boilerplate Simple boilerplate for Tauri 2 with Svelte 5 (and DaisyUI) using Bun runtime. Requirements In order to run this boilerplate, you need to install Bun and Rust. If you are on Windows I also recommend installing MSVC before the other dependencies (make sure to check the "Desktop development with C++" workload). Some useful links: https://bun.sh/docs/installation https://www.rust-lang.org/tools/install https://visualstudio.microsoft.com/vs/community/ Setup git clone https://github.com/alysonhower/tauri2-svelte5-boilerplate.git
cd tauri2-svelte5-boilerplate
bun i Useful commands Start dev server bun run tauri dev Build executable bun run tauri build Other links Svelte 5 https://svelte.dev/docs Tauri 2 https://tauri.app/start/ DaisyUI https://daisyui.com/docs/ Note: Boilerplate tested on Windows 11 only. License This project is licensed under the MIT License - see the LICENSE file for details. {"resolvedServerColorMode":"day"} About A clean desktop application template that combines Tauri 2 with Svelte 5 + DaisyUI, including automated CI/CD pipelines for Windows, Linux, and Mac builds. Topics rust template boilerplate typescript svelte tauri tailwindcss daisyui daisy-ui svelte5 tauri2 Resources Readme License MIT license Activity Stars 45 stars Watchers 1 watching Forks 8 forks Report repository Releases 1 tags Packages 0 No packages published Contributors 2 alysonhower Alysonhower Veras Vieira ViniciusCestarii Vinicius Cestari Languages TypeScript 34.2% Svelte 25.0% Rust 16.2% JavaScript 15.3% HTML 7.4% CSS 1.9% Footer © 2024 GitHub, Inc. Footer navigation Terms Privacy Security Status Docs Contact Manage cookies Do not share my personal information You can’t perform that action at this time.
======>
https://github.com/alysonhower/tauri2-svelte5-shadcn
-->>-->>
Skip to content {"props":{"docsUrl":"https://docs.github.com/get-started/accessibility/keyboard-shortcuts"}} {"resolvedServerColorMode":"day"} Navigation Menu Toggle navigation Sign in Product GitHub Copilot Write better code with AI Security Find and fix vulnerabilities Actions Automate any workflow Codespaces Instant dev environments Issues Plan and track work Code Review Manage code changes Discussions Collaborate outside of code Code Search Find more, search less Explore All features Documentation GitHub Skills Blog Solutions By company size Enterprises Small and medium teams Startups By use case DevSecOps DevOps CI/CD View all use cases By industry Healthcare Financial services Manufacturing Government View all industries View all solutions Resources Topics AI DevOps Security Software Development View all Explore Learning Pathways White papers, Ebooks, Webinars Customer Stories Partners Open Source GitHub Sponsors Fund open source developers The ReadME Project GitHub community articles Repositories Topics Trending Collections Enterprise Enterprise platform AI-powered developer platform Available add-ons Advanced Security Enterprise-grade security features GitHub Copilot Enterprise-grade AI features Premium Support Enterprise-grade 24/7 support Pricing Search or jump to... Search code, repositories, users, issues, pull requests... Search Clear Search syntax tips Provide feedback We read every piece of feedback, and take your input very seriously. Include my email address so I can be contacted Cancel Submit feedback Saved searches Use saved searches to filter your results more quickly Name Query To see all available qualifiers, see our documentation . Cancel Create saved search Sign in Sign up Reseting focus You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session. You switched accounts on another tab or window. Reload to refresh your session. Dismiss alert {{ message }} alysonhower / tauri2-svelte5-shadcn Public Notifications You must be signed in to change notification settings Fork 2 Star 86 A clean desktop application template that combines Tauri 2 with Svelte 5 + Shadcn-svelte, including automated CI/CD pipelines for Windows, Linux, and Mac builds. License MIT license 86 stars 2 forks Branches Tags Activity Star Notifications You must be signed in to change notification settings Code Issues 0 Pull requests 0 Actions Projects 0 Security Insights Additional navigation options Code Issues Pull requests Actions Projects Security Insights alysonhower/tauri2-svelte5-shadcn {"props":{"initialPayload":{"allShortcutsEnabled":false,"path":"/","repo":{"id":880570806,"defaultBranch":"main","name":"tauri2-svelte5-shadcn","ownerLogin":"alysonhower","currentUserCanPush":false,"isFork":false,"isEmpty":false,"createdAt":"2024-10-30T00:46:37.000Z","ownerAvatar":"https://avatars.githubusercontent.com/u/102027527?v=4","public":true,"private":false,"isOrgOwned":false},"currentUser":null,"refInfo":{"name":"main","listCacheKey":"v0:1731796801.0","canEdit":false,"refType":"branch","currentOid":"397b1159570ae9cec5c22a624d5f7f06be242ae6"},"tree":{"items":[{"name":".github","path":".github","contentType":"directory"},{"name":".vscode","path":".vscode","contentType":"directory"},{"name":"src-tauri","path":"src-tauri","contentType":"directory"},{"name":"src","path":"src","contentType":"directory"},{"name":"static","path":"static","contentType":"directory"},{"name":".gitignore","path":".gitignore","contentType":"file"},{"name":".npmrc","path":".npmrc","contentType":"file"},{"name":".prettierignore","path":".prettierignore","contentType":"file"},{"name":".prettierrc","path":".prettierrc","contentType":"file"},{"name":"CHANGES.md","path":"CHANGES.md","contentType":"file"},{"name":"LICENSE","path":"LICENSE","contentType":"file"},{"name":"README.md","path":"README.md","contentType":"file"},{"name":"bun.lockb","path":"bun.lockb","contentType":"file"},{"name":"components.json","path":"components.json","contentType":"file"},{"name":"package.json","path":"package.json","contentType":"file"},{"name":"postcss.config.js","path":"postcss.config.js","contentType":"file"},{"name":"svelte.config.js","path":"svelte.config.js","contentType":"file"},{"name":"tailwind.config.ts","path":"tailwind.config.ts","contentType":"file"},{"name":"tsconfig.json","path":"tsconfig.json","contentType":"file"},{"name":"vite.config.ts","path":"vite.config.ts","contentType":"file"}],"templateDirectorySuggestionUrl":null,"readme":null,"totalCount":20,"showBranchInfobar":false},"fileTree":null,"fileTreeProcessingTime":null,"foldersToFetch":[],"treeExpanded":false,"symbolsExpanded":false,"isOverview":true,"overview":{"banners":{"shouldRecommendReadme":false,"isPersonalRepo":false,"showUseActionBanner":false,"actionSlug":null,"actionId":null,"showProtectBranchBanner":false,"publishBannersInfo":{"dismissActionNoticePath":"/settings/dismiss-notice/publish_action_from_repo","releasePath":"/alysonhower/tauri2-svelte5-shadcn/releases/new?marketplace=true","showPublishActionBanner":false},"interactionLimitBanner":null,"showInvitationBanner":false,"inviterName":null,"actionsMigrationBannerInfo":{"releaseTags":[],"showImmutableActionsMigrationBanner":false,"initialMigrationStatus":null}},"codeButton":{"contactPath":"/contact","isEnterprise":false,"local":{"protocolInfo":{"httpAvailable":true,"sshAvailable":null,"httpUrl":"https://github.com/alysonhower/tauri2-svelte5-shadcn.git","showCloneWarning":null,"sshUrl":null,"sshCertificatesRequired":null,"sshCertificatesAvailable":null,"ghCliUrl":"gh repo clone alysonhower/tauri2-svelte5-shadcn","defaultProtocol":"http","newSshKeyUrl":"/settings/ssh/new","setProtocolPath":"/users/set_protocol"},"platformInfo":{"cloneUrl":"https://desktop.github.com","showVisualStudioCloneButton":false,"visualStudioCloneUrl":"https://windows.github.com","showXcodeCloneButton":false,"xcodeCloneUrl":"xcode://clone?repo=https%3A%2F%2Fgithub.com%2Falysonhower%2Ftauri2-svelte5-shadcn","zipballUrl":"/alysonhower/tauri2-svelte5-shadcn/archive/refs/heads/main.zip"}},"newCodespacePath":"/codespaces/new?hide_repo_select=true\u0026repo=880570806"},"popovers":{"rename":null,"renamedParentRepo":null},"commitCount":"3","overviewFiles":[{"displayName":"README.md","repoName":"tauri2-svelte5-shadcn","refName":"main","path":"README.md","preferredFileType":"readme","tabName":"README","richText":"\u003carticle class=\"markdown-body entry-content container-lg\" itemprop=\"text\"\u003e\u003cdiv class=\"markdown-heading\" dir=\"auto\"\u003e\u003ch1 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"\u003eTauri 2 Svelte 5 Boilerplate\u003c/h1\u003e\u003ca id=\"user-content-tauri-2-svelte-5-boilerplate\" class=\"anchor\" aria-label=\"Permalink: Tauri 2 Svelte 5 Boilerplate\" href=\"#tauri-2-svelte-5-boilerplate\"\u003e\u003csvg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"\u003e\u003cpath d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/div\u003e\n\u003cp dir=\"auto\"\u003eSimple boilerplate for Tauri 2 with Svelte 5 (and shadcn-svelte) using Bun runtime.\u003c/p\u003e\n\u003cdiv class=\"markdown-heading\" dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"\u003eRequirements\u003c/h2\u003e\u003ca id=\"user-content-requirements\" class=\"anchor\" aria-label=\"Permalink: Requirements\" href=\"#requirements\"\u003e\u003csvg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"\u003e\u003cpath d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/div\u003e\n\u003cp dir=\"auto\"\u003eIn order to run this boilerplate, you need to install Bun and Rust. If you are on Windows I also recommend installing MSVC before the other dependencies (make sure to check the \"Desktop development with C++\" workload).\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eSome useful links:\u003c/p\u003e\n\u003cul dir=\"auto\"\u003e\n\u003cli\u003e\u003ca href=\"https://bun.sh/docs/installation\" rel=\"nofollow\"\u003ehttps://bun.sh/docs/installation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.rust-lang.org/tools/install\" rel=\"nofollow\"\u003ehttps://www.rust-lang.org/tools/install\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://visualstudio.microsoft.com/vs/community/\" rel=\"nofollow\"\u003ehttps://visualstudio.microsoft.com/vs/community/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"markdown-heading\" dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"\u003eSetup\u003c/h2\u003e\u003ca id=\"user-content-setup\" class=\"anchor\" aria-label=\"Permalink: Setup\" href=\"#setup\"\u003e\u003csvg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"\u003e\u003cpath d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/div\u003e\n\u003cdiv class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"git clone https://github.com/alysonhower/tauri2-svelte5-shadcn.git\ncd tauri2-svelte5-shadcn\nbun i\"\u003e\u003cpre class=\"notranslate\"\u003e\u003ccode\u003egit clone https://github.com/alysonhower/tauri2-svelte5-shadcn.git\ncd tauri2-svelte5-shadcn\nbun i\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv class=\"markdown-heading\" dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"\u003eUseful commands\u003c/h2\u003e\u003ca id=\"user-content-useful-commands\" class=\"anchor\" aria-label=\"Permalink: Useful commands\" href=\"#useful-commands\"\u003e\u003csvg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"\u003e\u003cpath d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/div\u003e\n\u003cdiv class=\"markdown-heading\" dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"\u003eStart dev server\u003c/h3\u003e\u003ca id=\"user-content-start-dev-server\" class=\"anchor\" aria-label=\"Permalink: Start dev server\" href=\"#start-dev-server\"\u003e\u003csvg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"\u003e\u003cpath d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/div\u003e\n\u003cdiv class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"bun run tauri dev\"\u003e\u003cpre class=\"notranslate\"\u003e\u003ccode\u003ebun run tauri dev\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv class=\"markdown-heading\" dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"\u003eBuild executable\u003c/h3\u003e\u003ca id=\"user-content-build-executable\" class=\"anchor\" aria-label=\"Permalink: Build executable\" href=\"#build-executable\"\u003e\u003csvg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"\u003e\u003cpath d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/div\u003e\n\u003cdiv class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"bun run tauri build\"\u003e\u003cpre class=\"notranslate\"\u003e\u003ccode\u003ebun run tauri build\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv class=\"markdown-heading\" dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"\u003eOther links\u003c/h2\u003e\u003ca id=\"user-content-other-links\" class=\"anchor\" aria-label=\"Permalink: Other links\" href=\"#other-links\"\u003e\u003csvg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"\u003e\u003cpath d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/div\u003e\n\u003cdiv class=\"markdown-heading\" dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"\u003eSvelte 5\u003c/h3\u003e\u003ca id=\"user-content-svelte-5\" class=\"anchor\" aria-label=\"Permalink: Svelte 5\" href=\"#svelte-5\"\u003e\u003csvg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"\u003e\u003cpath d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/div\u003e\n\u003cp dir=\"auto\"\u003e\u003ca href=\"https://svelte.dev/docs\" rel=\"nofollow\"\u003ehttps://svelte.dev/docs\u003c/a\u003e\u003c/p\u003e\n\u003cdiv class=\"markdown-heading\" dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"\u003eTauri 2\u003c/h3\u003e\u003ca id=\"user-content-tauri-2\" class=\"anchor\" aria-label=\"Permalink: Tauri 2\" href=\"#tauri-2\"\u003e\u003csvg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"\u003e\u003cpath d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/div\u003e\n\u003cp dir=\"auto\"\u003e\u003ca href=\"https://tauri.app/start/\" rel=\"nofollow\"\u003ehttps://tauri.app/start/\u003c/a\u003e\u003c/p\u003e\n\u003cdiv class=\"markdown-heading\" dir=\"auto\"\u003e\u003ch3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"\u003eshadcn-svelte\u003c/h3\u003e\u003ca id=\"user-content-shadcn-svelte\" class=\"anchor\" aria-label=\"Permalink: shadcn-svelte\" href=\"#shadcn-svelte\"\u003e\u003csvg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"\u003e\u003cpath d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/div\u003e\n\u003cp dir=\"auto\"\u003e\u003ca href=\"https://next.shadcn-svelte.com/\" rel=\"nofollow\"\u003ehttps://next.shadcn-svelte.com/\u003c/a\u003e\u003c/p\u003e\n\u003cp dir=\"auto\"\u003eNote: Boilerplate tested on Windows 11 only.\u003c/p\u003e\n\u003cdiv class=\"markdown-heading\" dir=\"auto\"\u003e\u003ch2 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"\u003eLicense\u003c/h2\u003e\u003ca id=\"user-content-license\" class=\"anchor\" aria-label=\"Permalink: License\" href=\"#license\"\u003e\u003csvg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"\u003e\u003cpath d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e\u003c/div\u003e\n\u003cp dir=\"auto\"\u003eThis project is licensed under the MIT License - see the \u003ca href=\"/alysonhower/tauri2-svelte5-shadcn/blob/main/LICENSE\"\u003eLICENSE\u003c/a\u003e file for details.\u003c/p\u003e\n\u003c/article\u003e","loaded":true,"timedOut":false,"errorMessage":null,"headerInfo":{"toc":[{"level":1,"text":"Tauri 2 Svelte 5 Boilerplate","anchor":"tauri-2-svelte-5-boilerplate","htmlText":"Tauri 2 Svelte 5 Boilerplate"},{"level":2,"text":"Requirements","anchor":"requirements","htmlText":"Requirements"},{"level":2,"text":"Setup","anchor":"setup","htmlText":"Setup"},{"level":2,"text":"Useful commands","anchor":"useful-commands","htmlText":"Useful commands"},{"level":3,"text":"Start dev server","anchor":"start-dev-server","htmlText":"Start dev server"},{"level":3,"text":"Build executable","anchor":"build-executable","htmlText":"Build executable"},{"level":2,"text":"Other links","anchor":"other-links","htmlText":"Other links"},{"level":3,"text":"Svelte 5","anchor":"svelte-5","htmlText":"Svelte 5"},{"level":3,"text":"Tauri 2","anchor":"tauri-2","htmlText":"Tauri 2"},{"level":3,"text":"shadcn-svelte","anchor":"shadcn-svelte","htmlText":"shadcn-svelte"},{"level":2,"text":"License","anchor":"license","htmlText":"License"}],"siteNavLoginPath":"/login?return_to=https%3A%2F%2Fgithub.com%2Falysonhower%2Ftauri2-svelte5-shadcn"}},{"displayName":"LICENSE","repoName":"tauri2-svelte5-shadcn","refName":"main","path":"LICENSE","preferredFileType":"license","tabName":"MIT","richText":null,"loaded":false,"timedOut":false,"errorMessage":null,"headerInfo":{"toc":null,"siteNavLoginPath":"/login?return_to=https%3A%2F%2Fgithub.com%2Falysonhower%2Ftauri2-svelte5-shadcn"}}],"overviewFilesProcessingTime":0}},"appPayload":{"helpUrl":"https://docs.github.com","findFileWorkerPath":"/assets-cdn/worker/find-file-worker-1583894afd38.js","findInFileWorkerPath":"/assets-cdn/worker/find-in-file-worker-67668e8c2caa.js","githubDevUrl":null,"enabled_features":{"code_nav_ui_events":false,"overview_shared_code_dropdown_button":false,"react_blob_overlay":false,"copilot_conversational_ux_embedding_update":false,"copilot_smell_icebreaker_ux":true,"copilot_workspace":false,"blob_edit_unsaved_changes_storage":true,"accessible_code_button":true}}}} main 1 Branch 1 Tag Go to file Code Folders and files Name Name Last commit message Last commit date Latest commit alysonhower feat: add MIT license and update project metadata Nov 17, 2024 397b115 · Nov 17, 2024 History 3 Commits .github .github feat: add MIT license and update project metadata Nov 17, 2024 .vscode .vscode feat: update deps & implement basic ci/cd config Nov 16, 2024 src-tauri src-tauri feat: add MIT license and update project metadata Nov 17, 2024 src src feat: update deps & implement basic ci/cd config Nov 16, 2024 static static 🎉 initial commit Nov 4, 2024 .gitignore .gitignore feat: update deps & implement basic ci/cd config Nov 16, 2024 .npmrc .npmrc 🎉 initial commit Nov 4, 2024 .prettierignore .prettierignore 🎉 initial commit Nov 4, 2024 .prettierrc .prettierrc feat: update deps & implement basic ci/cd config Nov 16, 2024 CHANGES.md CHANGES.md feat: add MIT license and update project metadata Nov 17, 2024 LICENSE LICENSE feat: add MIT license and update project metadata Nov 17, 2024 README.md README.md feat: add MIT license and update project metadata Nov 17, 2024 bun.lockb bun.lockb feat: add MIT license and update project metadata Nov 17, 2024 components.json components.json feat: update deps & implement basic ci/cd config Nov 16, 2024 package.json package.json feat: add MIT license and update project metadata Nov 17, 2024 postcss.config.js postcss.config.js feat: update deps & implement basic ci/cd config Nov 16, 2024 svelte.config.js svelte.config.js feat: update deps & implement basic ci/cd config Nov 16, 2024 tailwind.config.ts tailwind.config.ts feat: update deps & implement basic ci/cd config Nov 16, 2024 tsconfig.json tsconfig.json 🎉 initial commit Nov 4, 2024 vite.config.ts vite.config.ts feat: update deps & implement basic ci/cd config Nov 16, 2024 View all files Repository files navigation README MIT license Tauri 2 Svelte 5 Boilerplate Simple boilerplate for Tauri 2 with Svelte 5 (and shadcn-svelte) using Bun runtime. Requirements In order to run this boilerplate, you need to install Bun and Rust. If you are on Windows I also recommend installing MSVC before the other dependencies (make sure to check the "Desktop development with C++" workload). Some useful links: https://bun.sh/docs/installation https://www.rust-lang.org/tools/install https://visualstudio.microsoft.com/vs/community/ Setup git clone https://github.com/alysonhower/tauri2-svelte5-shadcn.git
cd tauri2-svelte5-shadcn
bun i Useful commands Start dev server bun run tauri dev Build executable bun run tauri build Other links Svelte 5 https://svelte.dev/docs Tauri 2 https://tauri.app/start/ shadcn-svelte https://next.shadcn-svelte.com/ Note: Boilerplate tested on Windows 11 only. License This project is licensed under the MIT License - see the LICENSE file for details. {"resolvedServerColorMode":"day"} About A clean desktop application template that combines Tauri 2 with Svelte 5 + Shadcn-svelte, including automated CI/CD pipelines for Windows, Linux, and Mac builds. Topics rust template boilerplate typescript svelte tauri tailwindcss shadcn-ui shadcn shadcn-svelte svelte5 tauri2 Resources Readme License MIT license Activity Stars 86 stars Watchers 1 watching Forks 2 forks Report repository Releases 1 tags Packages 0 No packages published Languages Svelte 49.2% TypeScript 28.8% CSS 11.8% Rust 4.3% JavaScript 4.1% HTML 1.8% Footer © 2024 GitHub, Inc. Footer navigation Terms Privacy Security Status Docs Contact Manage cookies Do not share my personal information You can’t perform that action at this time.

======>
https://old.reddit.com/r/rust/comments/1gtngnq/roast_my_rust_project/
-->>-->>
Hi everyone!   

   I’m working on a Rust project called    cargobase    and would love to get some feedback from the community. As you might notice from looking at the repo, I’m still learning Rust, and this project is part of my effort to dive deeper into the language.   

   Project Background   

   The inspiration for this project came from the recurring issue of choosing a database during development. I often found myself spending more time figuring out cloud database solutions (AWS, Neon, etc.) rather than building the actual application. To simplify the local development experience, I decided to create a small, JSON-based local database that can be easily integrated into projects without requiring external setup.   

   Current Status   

   The project is still a work in progress, but I have implemented basic features like creating a database, adding tables, inserting rows, and some basic querying capabilities. I’ve also started writing unit tests, and I have to say, writing tests in Rust (especially inline with the code) has been surprisingly enjoyable!   

   Areas I’d Love Feedback On   

   
   Am I doing it the rust way? If not, what should be changed to make it more "rusty?"   
   Is the module organization clear and effective? Could it be improved for better maintainability or scalability?   
   Are there any obvious foot guns that I might be overlooking?   
   

   Thank for taking the time to read this any feedback/criticism would be appreciated!   
   

======>
https://old.reddit.com/r/rust/comments/1gtgque/how_can_i_programmatically_create_graphs_with/
-->>-->>
Is there (a crate or) something I can use to create arbitrarily many gadgets comprising arbitrarily many vertices, connect them programmatically, and then spit out an adjacency matrix/list? This is the Y.   

   The X is that I'm working on a project to represent arbitrarily large arithmetic operations as a   n undirected    graph, where each input-output digit and intermediate calculation is a gadget.   

   I've got my head just about wrapped around the issue of how to identify the gadgets and connect the vertices inside them. I probably could code something from scratch, but I'd like to avoid that if possible.   

   Edit: Forgot a (possibly important) word   
   

======>
https://old.reddit.com/r/rust/comments/1gthhej/colpalionnx_on_rust/
-->>-->>
EmbedAnything has recently released a full tutorial on how to run ColPali-ONNX on Rust. They have their own model that you can download from here:    https://huggingface.co/starlight-ai   
Find the notebook here:    https://github.com/StarlightSearch/EmbedAnything/tree/main/examples   
   

======>
https://old.reddit.com/r/rust/comments/1gti141/hey_fellow_reqwest_users_any_crate/
-->>-->>
By lower-level metrics I mean things like:   
time when a DNS lookup completed   
time when a socket was assigned to the request   
time when the socket connected to the upstream system   
time when the first byte was sent back by the upstream system   
and so on   

======>
https://old.reddit.com/r/rust/comments/1gszyav/tauri_2_svelte_5_w_shadcnsvelte_cicd_build_fast/
-->>-->>
Hey folks! 👋   

   I wanted to share a simple boilerplate I put together with love. Nothing fancy, just a clean starting point combining some cool tech I enjoy working with:   

   ✨ What's in the box:   

   
   Tauri 2.0 (for those sweet, lightweight desktop apps)   
   Svelte 5 with the new runes   
   shadcn-svelte for some nice UI components   
   Bun as the runtime   
   And last but not least: a simple ci/cd github actions that builds and releases it when you push to the main branch and push a new tag   
   

   It's pretty straightforward to get started. You'll need Bun and Rust installed (Windows folks, grab MSVC first), then just:   

   
git clone https://github.com/alysonhower/tauri2-svelte5-shadcn.git
cd tauri2-svelte5-shadcn
bun i
bun run tauri dev
   

   And done! Your starting point is ready!   

   Repo:    https://github.com/alysonhower/tauri2-svelte5-shadcn   

   The same but with DaisyUI instead of shadcn-svelte:    https://github.com/alysonhower/tauri2-svelte5-boilerplate   

   If you find this project helpful, consider giving it a ⭐️ on GitHub! And hey, if you have ideas to make it even better, I'd love to see your PRs - whether it's fixing bugs, adding features, or improving documentation. Let's make this boilerplate awesome together! 🤝   

   Happy coding! 🚀   
   

======>
https://old.reddit.com/r/rust/comments/1gtntom/would_this_function_be_a_benefitial_std_inclusion/
-->>-->>
I've run into  an issue when it comes to popping specific items out of a vec matching a predicate   

   for example lets say I have this struct:   

   struct employee{
  name: String,
  id: u32,
}

struct my_other_struct{
  ids: Vec<employee>
}
impl my_other_struct{
  fn remove_employee(&self, id:u32){
     self.ids.retain(|x| x != id);
  }
}
   

   now this of course works, but I feel like it would be more ergonomic to have a function like    fn filter_pop()   
(pass a predicate all items matching it get popped) since you could chain after    into_iter()    aswell Do you guys think this would be a good addition to the std lib or unneccessary?   
   

======>
https://jamesmcm.github.io/blog/esp32-wifi-tank/
-->>-->>
James McMurray's Blog Rust, Linux and other curiosities Navigate… » Home » Blog --- » RSS Feed » LinkedIn » Github Home Blog RSS LinkedIn Github Building a Wifi-controlled car with Rust and ESP32 2024-11-17 In this post we will create a basic Wifi-controlled car with an ESP32
development board and ESP32-CAM camera module, and all of the code
written in Rust. All of the code for this example is available on Github in my esp32_wifi_tank repo . Opinions expressed are solely my own and do not express the views or opinions of my employer. Overview The project consists of three crates for the rover control board, a client on the host machine, and the camera board.
The esp-wifi connection code was adapted from @flyaruu's esp32-nostd crate ,
and the esp32cam code was adapted from @Kezii's esp32cam_rs crate. The control board will connect to the given Wifi credentials (at compile
time) with the wifitank hostname. The ESP32-CAM camera module will do
the same with the espressif hostname. The client code can then be run
on any machine connect to the same LAN, and will connect to the control
board and camera module via their fixed hostnames. Video Your browser does not support the video tag. Hardware 1x ESP32 Xtensa development board (I used the Lolin D32 Pro for this
project). Although I would not recommend this board for this project
specifically as it has no 5V output pin. It is nice that it is thin
enough to use access pins on both sides with a standard breadboard
though. 1x ESP32-CAM board (external antenna is optional) 1x UART-USB adapter (I used one like this one - note we need 5V output
here for the ESP32-CAM) 2x L298N motor drivers 4x DC Gearbox motors (I used these "TT Motor" ones from the kit) 1x Robot car chassis (I used the Elegoo one from this kit , but you could also cut
this from card or 3D print it). 1x USB power bank for powering the main ESP32 control board 1x Battery holder module - to power the motors via the motor drivers 4x AA batteries (I used rechargeable ones) 4x wheels and tires - in this case I used the ones from the Elegoo
kit. Software First install Rust and espup according to the Xtensa ESP32 section of the Rust on ESP32 book . Most of this project was written without using the standard library, so we use
the esp-template no_std template for project generation. Note the
esp32cam part does use the esp-idf-template . The code can the be built and flashed with: $ source ~ /export-esp.sh $ cargo run --release When connected with a data-transfer capable micro-USB cable. Control board code The control board will connect to the Wifi credentials given as
environment variables at compile time (the code does not yet support
setting credentials at run-time via BLE / Bluetooth), and wait to receive
commands from the client program over UDP. esp-alloc Since we use no-std here, we need to provide an allocator in order to
use esp-wifi. This code uses esp-alloc to create a 128KiB static heap -
this must be initialised before usage so that the memory allocations
required by esp-wifi will succeed. This is called in the initialisation steps at the start of the main function: fn init_heap () { const HEAP_SIZE : usize = 128 * 1024 ; static mut HEAP : MaybeUninit<[ u8 ; HEAP_SIZE ]> = MaybeUninit::uninit(); unsafe { esp_alloc:: HEAP . add_region (esp_alloc::HeapRegion::new( HEAP . as_mut_ptr () as *mut u8 , HEAP_SIZE , esp_alloc::MemoryCapability::Internal. into (), )); } } #[ esp_hal_embassy :: main ] async fn main ( spawner : Spawner) { let peripherals = esp_hal::init(esp_hal::Config::default()); let io = esp_hal::gpio::Io::new(peripherals. GPIO , peripherals. IO_MUX ); let seed = 0x0123_4567_89ab_cdef ; init_heap (); let timg0 = TimerGroup::new(peripherals. TIMG0 ); esp_hal_embassy::init(timg0.timer0); ... Wifi connection Here we use esp-wifi for the Wifi connection with no-std. One thing to
note is that the Access Point must support WPA2 Personal authentication,
and use 2.4Ghz channels - WPA3 and 5G are not supported on the board I
used. At the moment the Wifi credentials are provided as environment variables
at build time (or in .cargo/config.toml ). This code is adapted from @flyaruu's esp32-nostd crate which is a great resource for using the esp-wifi crate directly. Also
see his Rust on ESP32 no_std YouTube series . We connect to the Wifi as follows (note the use of the heapless crate for no-std Strings): ... let wifi_ssid = heapless::String::<32>::from_str(env!(" WIFI_SSID ")). unwrap (); let wifi_password = heapless::String::<64>::from_str(env!(" WIFI_PASSWORD ")). unwrap (); let timg1 = TimerGroup::new(peripherals. TIMG1 ); let wifi_init = esp_wifi::init( esp_wifi::EspWifiInitFor::Wifi, timg1.timer0, rng, peripherals. RADIO_CLK , ) . unwrap (); let wifi_config = esp_wifi::wifi::ClientConfiguration { ssid: wifi_ssid, bssid: None, auth_method: AuthMethod::WPA2Personal, password: wifi_password, channel: None, }; let (wifi_device, mut wifi_controller): (WifiDevice<WifiStaDevice>, _) = wifi::new_with_config(&wifi_init, peripherals. WIFI , wifi_config). unwrap (); wifi_controller. start ().await. unwrap (); delay. delay ( 1000. millis ()); for i in 0 .. 20 { if wifi_controller. connect ().await. is_ok () { break ; } log::info!(" Failed to connect, retrying - try {}... ", i); delay. delay ( 1000. millis ()); } One thing to note is that we have to deal with retries ourselves (and
this is absolutely necessary, expect some failures when connecting) -
there is no retry option in the connect() method and retries are
expected to be implemented in the application - see issue #45 in esp-wifi-sys for example. With the Wifi connected, we can initialise embassy-net and request an IP address to be assigned via
DHCP. type WifiDriver = WifiDevice< 'static , WifiStaDevice>; const CLIENT_NAME : & str = " wifitank "; #[ embassy_executor :: task ] async fn net_task ( stack : & 'static Stack<WifiDriver>) -> ! { stack. run ().await } #[ esp_hal_embassy :: main ] async fn main ( spawner : Spawner) { ... let mut dhcp_config = DhcpConfig::default(); dhcp_config.hostname = Some(heapless::String::from_str( CLIENT_NAME ). unwrap ()); let net_config = NetConfig::dhcpv4(dhcp_config); static STACK : StaticCell<Stack<WifiDriver>> = StaticCell::new(); static RESOURCES : StaticCell<StackResources<4>> = StaticCell::new(); let stack = &* STACK . init (Stack::new( wifi_device, net_config, RESOURCES . init (StackResources::<4>::new()), seed, )); let mac_addr = stack. hardware_address (); spawner. spawn ( net_task (stack)). unwrap (); stack. wait_config_up ().await; match stack. config_v4 () { Some(a) => log::info!(" IP Address appears to be: {} ", a.address), None => core::panic!(" DHCP completed but no IP address was assigned! "), } Note at the moment we only use a separate task for running the network
stack, but the Wifi connection code could also be put in its own task
for automatic reconnection like in @flyaruu's esp32-nostd crate . This ease of writing async checks like that is a great example of the
benefits of using embassy. Finally we create the UDP socket and start parsing the received
datagrams from the client: ... let mut udp_rx_meta = [PacketMetadata:: EMPTY ; 16 ]; let mut udp_rx_buffer = [ 0 ; 1024 ]; let mut udp_tx_meta = [PacketMetadata:: EMPTY ; 16 ]; let mut udp_tx_buffer = [ 0 ; 1024 ]; let mut msg_buffer = [ 0 ; 128 ]; let mut udp_socket = UdpSocket::new( stack, & mut udp_rx_meta, & mut udp_rx_buffer, & mut udp_tx_meta, & mut udp_tx_buffer, ); udp_socket. bind ( 8080 ). unwrap (); loop { let (rx_size, from_addr) = udp_socket. recv_from (& mut msg_buffer).await. unwrap (); if rx_size == 0 { continue ; } let response = msg_buffer[rx_size - 1 ] as char ; match response { ' F ' => motors. forward (), ... Motor drivers The two L298N motor drivers drive the motors on the left and right side of the
car separately. There is no steering, but we can drive each wheel
independently, so the car is turned like a tank -
driving the motors on one side forwards, and backwards on the other
side. The LastMinuteEngineers' Interface L298N DC Motor Driver Module with Arduino article is very useful for understanding the wiring of the motor driver pins. I wired the GPIO pins as follows: Left motor driver: Pin 13 to EN1 Pin 12 to EN2 Pin 26 to EN3 Pin 25 to EN4 Right motor driver: Pin 21 to EN1 Pin 19 to EN2 Pin 22 to EN3 Pin 23 to EN4 As noted in the article setting both inputs to high or low will disable
the motor, whilst one high and one low will turn it either forwards or
backwards. This is handled in the motors.rs code.
Note the two motors on the same side are always driven in the same
direction - e.g. both forwards or both backwards. Here we can see the benefits of Rust's rich type system making it easy
to encapsulate this logic outside of the main control code: enum MotorDriverState { Stopped, Forward, Reverse, } pub struct MotorDriver< 'a > { v_a_pin : Output< 'a , esp_hal::gpio::AnyPin>, v_b_pin : Output< 'a , esp_hal::gpio::AnyPin>, g_a_pin : Output< 'a , esp_hal::gpio::AnyPin>, g_b_pin : Output< 'a , esp_hal::gpio::AnyPin>, state : MotorDriverState, } ... #[ derive (Debug, PartialEq)] enum MotorsState { Stopped, Forward, Reverse, Left, Right, } pub struct Motors< 'a > { left_motor : MotorDriver< 'a >, right_motor : MotorDriver< 'a >, state : MotorsState, } This completes the code for the control board. Camera module code The esp32cam code is used to connect the ESP32-CAM module to the Wifi,
and host a web server where the video can be streamed in the web browser (as a series of
JPGs). This code is a modified version of @Kezii's esp32cam_rs crate - note this uses esp-idf so it is not no-std. This code requires SPI RAM to be enabled - CONFIG_ESP32_SPIRAM_SUPPORT=y in sdkconfig.defaults. Omitting the code for the Wifi connection and camera initialisation, the camera stream is served as a multipart stream of jpegs: server. fn_handler ( " /camera ", Method::Get, move |request| -> Result<(), anyhow::Error> { let part_boundary = " 123456789000000000000987654321 "; let frame_boundary = format!(" \r\n -- {} \r\n ", part_boundary); let content_type = format!(" multipart/x-mixed-replace;boundary= {} ", part_boundary); let headers = [(" Content-Type ", content_type. as_str ())]; let mut response = request. into_response ( 200 , Some(" OK "), &headers). unwrap (); loop { if let Some(fb) = cam_arc_clone. get_framebuffer () { let data = fb. data (); let frame_part = format!( " Content-Type: image/jpeg \r\n Content-Length: {} \r\n\r\n ", data. len () ); response. write_all (frame_part. as_bytes ())?; response. write_all (data)?; response. write_all (frame_boundary. as_bytes ())?; response. flush ()?; } } Ok(()) }, )?; The home page displays this stream at full-screen, rotated 180-degrees
(since the camera is mounted upside-down): server. fn_handler (" / ", Method::Get, | request | -> Result<(), anyhow::Error> { let data = " <html><head><meta name= \" viewport \" content= \" width=device-width; height=device-height; \" ><title>esp32cam</title></head><body><img src= \" camera \" alt= \" Failed to load image \" style= \" height: 100%;width: 100%; transform: rotate(180deg); \" ></body></html> "; let headers = [ (" Content-Type ", " text/html "), (" Content-Length ", &data. len (). to_string ()), ]; let mut response = request. into_response ( 200 , Some(" OK "), &headers)?; response. write_all (data. as_bytes ())?; Ok(()) })?; So far I did not use an external antenna with the ESP32-CAM module as it
is difficult to solder, although this is recommended. I had many issues with peaks in latency
from the camera, although it's not certain that this is the issue. Also note I used a 5V input from the UART adapter (via the USB power bank)
to power the ESP32-CAM module as a 5V input is highly recommended for
stability (although a 3.3V input exists too). Flashing the ESP32-CAM module A major issue I had was being able to flash the ESP32-CAM module with
the code above. I did not buy the ESP32-CAM-MB module for flashing
it, so I had to use a USB-UART adapter. See the LastMinuteEngineers' ESP32-CAM article for a guide on that too. In order to flash it correctly I had to do the following: Use the 5V input from the USB-UART adapter Add a jumper cable between the IO0 pin and the adjacent GND pin on the
ESP32-CAM board to put it in flashing mode. Reset the board with the reset button immediately before flashing (and
starting the flashing process within 2 seconds of the reset). The last point is important, otherwise it would just fail to connect
after some time. Client code The controller client uses the gilrs crate to detect a USB-gamepad,
and then connects to the rover via its fixed hostname: wifitank , and
sends the commands from the D-pad as UDP datagrams. We set the active gamepad by waiting for the user to press a button: #[ tokio :: main ] async fn main () -> Result<(), Box<dyn Error>> { use gilrs::{Button, Event, Gilrs}; let mut gilrs = Gilrs::new(). unwrap (); let mut active_gamepad = None; println!(" Push button on gamepad! "); while active_gamepad. is_none () { // Examine new events while let Some(Event { id, event, time, .. }) = gilrs. next_event () { println!(" {:?} New event from {} : {:?} ", time, id, event); active_gamepad = Some(id); } } Then we get the IP address for the wifitank: const TARGET_HOSTNAME : & str = " wifitank:8080 "; #[ tokio :: main ] async fn main () -> Result<(), Box<dyn Error>> { ... let addr = env::args() . nth ( 1 ) . unwrap_or_else (|| " 0.0.0.0:8080 ". to_string ()); let socket = UdpSocket::bind(&addr).await?; let peer = loop { if let Ok(p) = tokio::net::lookup_host( TARGET_HOSTNAME ).await { if let Some(pi) = p. into_iter (). next () { break pi; } } tokio::time::sleep(tokio::time::Duration::from_millis( 500 )).await; }; Then we loop and check for gamepad input events, and send them to the
rover: ... loop { while let Some(Event { id, event, time, .. }) = gilrs. next_event () { println!(" {:?} New event from {} : {:?} ", time, id, event); } { let gamepad = gilrs. gamepad (active_gamepad. expect (" Gamepad not found! ")); if gamepad. is_pressed (Button::DPadUp) { socket. send_to ( b " F ", &peer).await?; } else if gamepad. is_pressed (Button::DPadDown) { socket. send_to ( b " B ", &peer).await?; } else if gamepad. is_pressed (Button::DPadLeft) { socket. send_to ( b " L ", &peer).await?; } else if gamepad. is_pressed (Button::DPadRight) { socket. send_to ( b " R ", &peer).await?; } else if gamepad. is_pressed (Button::Select) { socket. send_to ( b " Q ", &peer).await?; break ; } else { socket. send_to ( b " N ", &peer).await?; } } tokio::time::sleep(tokio::time::Duration::from_millis( 50 )).await; } Despite the 50ms sleeping, this feels very responsive when in use. Conclusion With all of the above, I was able to connect the rover to the Steam Deck
and drive it around the apartment from another room using just the
camera. In terms of development, the biggest issues were getting esp-wifi to
connect correctly from the control board (the AP had to be 2.4GHz and WPA2),
and working out how to flash the ESP32-CAM module (it had to be set in
flashing mode and immediately reset before flashing). The biggest issue in usage however, is the latency spikes in the video
stream. I'm not sure what the best solution is here (perhaps a stream of
JPEGs just isn't practical for low latency despite the simplicity), or
maybe the external antenna is necessary to avoid connection issues as it moves
around the apartment. Fixing that and provisioning the Wifi credentials via BLE would be the
main things to improve soon. Possible improvements There's a number of improvements left to make in this project: Support ESP BLE Provisioning for setting the Wifi credentials via BLE for both
boards. Create a nostd version of the esp32cam crate. Motor speed control (use ENA and ENB pins with PWM). Test external antenna for ESP32-CAM. Test higher input voltage to the motors. Add ultrasonic sensors for collision prevention / maze solving. Use a development board with 5V out so the motor driver logic can be
powered from the board. Add a voltage regulator and buck converter so the battery pack could
power the development board too, so the heavy power bank would not be
needed. Future projects I'd also like to try some of these more complicated projects in the
future: Car with separate steering and drive wheels - like an RC car, so it
can turn while moving. Rover with independent steering on all 4 wheels - see Lukas Deem's rover project ESP-NOW controller - build a controller and communicate with ESP-NOW instead of Wifi. RC controller - build a controller to communicate via radio, although
the Hexapod project below had a lot of issues with this. Hexapod - see Tazer's Hexapod project Robot arm - there are a lot of examples of 6 Degrees of Freedom
robot arms. Resources @flyaruu's esp32-nostd crate - the best reference for nostd esp_wifi usage. Floodplain's Rust on ESP32 no_std YouTube series Embassy on ESP blog series ESP32 Embedded Rust at the HAL blog series LastMinuteEngineers' in-depth L298N motor driver tutorial Rust Networking with the Raspberry Pi Pico Rust Client/Server Comms on the Raspberry Pi Pico IoT with Rust on ESP Connect ESP32 to Wifi with Rust LastMinuteEngineers' Getting Started with ESP32 CAM Joe Thieman's robotics channel Back to top Older Post › Copyright © 2024 - James McMurray - Powered by Zola
======>
https://old.reddit.com/r/rust/comments/1gtaai2/question_why_cant_two_static_strs_be_concatenated/
-->>-->>
Foreword: I know that    concat!()    exists; I am talking about arbitrary    &'static str    variables, not just string literal tokens.   

   I suppose, in other words, why isn't this trait implementation found in the standard library or the core language?:   

   rs
impl std::ops::Add<&'static str> for &'static str {
    type Output = &'static str;
    fn add() -> Self::Output { /* compiler built-in */ }
}
   

   Surely the compiler could simply allocate a new    str    in static read-only memory?
If it is unimplemented to de-incentivize polluting static memory with redundant strings, then I understand.   

   Thanks!   
   

======>
https://github.com/liam-ilan/terminal3d
-->>-->>
Repository files navigation README Terminal3d Terminal3d ( t3d ) is a tool for viewing 3d .obj files, right in your terminal! 🦀 Ted the bear - Find this example under examples/ted.obj Features Reads and renders .obj files to the terminal. Render with both braille ( ⡟ ) and block ( ▛ ) characters. Choose between wireframe and vertices modes. Use mouse controls to view your model, just like any other 3d software. Installation Installing Terminal3d can be done via brew, crates.io, or from source. From brew To install Terminal3d with brew, install from this tap . brew install liam-ilan/terminal3d/terminal3d You will be able to invoke the binary as t3d . Render a .obj file with t3d < filepath.obj > From crates.io Terminal3d is published as a crate on crates.io . If you have Cargo, you can install it with cargo install terminal3d You will be able to invoke the binary as t3d . Render a .obj file with t3d < filepath.obj > From Source If you don't want to install a Rust crate, but do have Rust installed, you can build and run Terminal3d directly from source. Clone this repository, git clone https://github.com/liam-ilan/terminal3d.git To render a .obj file, navigate to the root of the repo directory, and run cargo run --release < filepath.obj > Demos examples/teapot.obj rendered in block mode examples/cow.obj rendered in vertices mode UBC Formula Electric 's Vehicle Controller, rendered in vertices mode from an export from Altium Designer. This board drives decisions related to inverters, drive algorithms, and LV power management. If you would like to support the team of aspiring engineers behind this board and the vehicle it drives, contact contact@ubcformulaelectric.com for more info. Usage t3d: Visualize .obj files in the terminal!

Usage:
    "t3d <filepath.obj>": Interactively view the provided .obj file.
    "t3d --h", "t3d --help", "t3d -h", "t3d -help", "t3d": Help and info.
    "t3d --v", "t3d --version", "t3d -v", "t3d -version": Get version info.

Controls:
    Scroll down to zoom out, scroll up to zoom in.
    Click and drag the mouse to rotate around the model.
    Click and drag the mouse while holding [shift] to pan.

    Press [b] to toggle block mode. 
    Press [p] to toggle vertices mode. Obtained from t3d -h Publishing Notes for the maintainer on publishing Terminal3d can be found in PUBLISHING.md . Author (c) Liam Ilan
======>
https://old.reddit.com/r/rust/comments/1gtndmt/why_cant_the_compiler_infer_the_types_for_intot/
-->>-->>
As someone who often writes C code, I'm used to sizing my integers based on the actual range of values they can take. When I write Rust code, this is somewhat painful as it results in littering the code with 'as T' to convert to common types.   

   At times, I am tempted to use the "Into" trait to attempt to upgrade numbers I know will fit (e.g., u16 in u32, u8 in i32, etc). However,    this results in a type inference error.    Why? I could understand if the larger operand were an untyped number, but in this example the compiler knows the other type, so why can't it infer the "Into"?   
   
======>
https://marketplace.dndbeyond.com/category/3710000?utm_source=reddit&utm_medium=paid&utm_campaign=2024core_dungeonmastersguide&utm_content={{ADGROUP_NAME}}&utm_term={{AD_NAME}}
-->>-->>
Product details Weave Fantastical Adventures Excite your imagination with the 2024 Dungeon Master’s Guide , revised and expanded for fifth edition DUNGEONS & DRAGONS! We’ve created this essential resource with wonderful world-building resources and real-world advice for your D&D sessions, such as how to accommodate missing players or address metagaming. A New Game Awaits Engage your players with fresh mechanics, including a revised magic item crafting system and rules for base building with bastions. Get lost in pages of spectacular new artwork, featuring new magic items and marvelous D&D landscapes. Enhance your experience with new quality-of-life improvements, including thoughtfully designed handouts and an alphabetized Lore Glossary. Whether you're a new or experienced Dungeon Master, here’s everything you need to weave epic tales, build fantastical worlds, and inspire memorable moments for your party to enjoy. Ready-made Adventure Explore the Greyhawk campaign setting as you improve your DM skills. This book presents Greyhawk as a customizable, ready-to-use campaign setting for Dungeon Masters. Set your adventures within Greyhawk or use it as a foundation for worlds you create. New features: Intended for Dungeon Masters of all experience levels, providing useful tools and advice for running your D&D game. Includes real-world examples of common pitfalls for Dungeon Masters, along with suggestions for how to handle them. 15 new, ready-to-use, reusable maps for homebrew adventures. Multiple handouts and resources for keeping track of campaigns. Presents Greyhawk as a customizable, ready-to-use campaign setting for Dungeon Masters. Set your adventures within Greyhawk or use it as a foundation for worlds you create. More than 400 new and improved treasures and magical items, including 18 brand new magical items. Contains rules for bastions, strongholds built and controlled by players. With crafting, base-building, and resource gathering, bastions are a fun between-session option for players. Easily find information on key D&D characters and locations with the Lore Glossary. Includes a double-sided poster map depicting Eastern Oerik from the Greyhawk setting and the city of Greyhawk. Product specifications DUNGEONS & DRAGONS 2024 Dungeon Master's Guide SKU: 3710000 Format: Language: English Book dimensions: 8.5 x 11.125 x 0.875 Manufacturer: Wizards of the Coast Product details Weave Fantastical Adventures Excite your imagination with the 2024 Dungeon Master’s Guide , revised and expanded for fifth edition DUNGEONS & DRAGONS! We’ve created this essential resource with wonderful world-building resources and real-world advice for your D&D sessions, such as how to accommodate missing players or address metagaming. A New Game Awaits Engage your players with fresh mechanics, including a revised magic item crafting system and rules for base building with bastions. Get lost in pages of spectacular new artwork, featuring new magic items and marvelous D&D landscapes. Enhance your experience with new quality-of-life improvements, including thoughtfully designed handouts and an alphabetized Lore Glossary. Whether you're a new or experienced Dungeon Master, here’s everything you need to weave epic tales, build fantastical worlds, and inspire memorable moments for your party to enjoy. Ready-made Adventure Explore the Greyhawk campaign setting as you improve your DM skills. This book presents Greyhawk as a customizable, ready-to-use campaign setting for Dungeon Masters. Set your adventures within Greyhawk or use it as a foundation for worlds you create. New features: Intended for Dungeon Masters of all experience levels, providing useful tools and advice for running your D&D game. Includes real-world examples of common pitfalls for Dungeon Masters, along with suggestions for how to handle them. 15 new, ready-to-use, reusable maps for homebrew adventures. Multiple handouts and resources for keeping track of campaigns. Presents Greyhawk as a customizable, ready-to-use campaign setting for Dungeon Masters. Set your adventures within Greyhawk or use it as a foundation for worlds you create. More than 400 new and improved treasures and magical items, including 18 brand new magical items. Contains rules for bastions, strongholds built and controlled by players. With crafting, base-building, and resource gathering, bastions are a fun between-session option for players. Easily find information on key D&D characters and locations with the Lore Glossary. Includes a double-sided poster map depicting Eastern Oerik from the Greyhawk setting and the city of Greyhawk.
======>
https://old.reddit.com/r/rust/comments/1gti04o/from_rust_to_c/
-->>-->>
I have been working on Rust fulltime at my company for 5 months as a first timer to systems languages and enjoy it quite well.    

   I am planning to roate to a different team in a few months which only work on C++. I have a meh level of C++ in an embdeed systems context (e.g ARM Cortex) but have zero experience in using it as a systems language. Building C++ projects alone seems crazy and it behaves differently in different os', and I still think in a "rust way".   

   Does anyone have any advice on transitioning to C++ comiing from rust, I've seen a lot for C++ to Rust but not many for the other way around   
   
