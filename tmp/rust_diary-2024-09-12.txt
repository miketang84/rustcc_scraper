https://old.reddit.com/r/rust/comments/1ff7je9/kartoffels_a_robot_combat_arena_v04_released_feat/
-->>-->>
Kartoffels    is a game where you're given a potato and your job is to implement    a firmware    for it, in Rust!   

   https://preview.redd.it/86ge5kubqeod1.png?width=2552&format=png&auto=webp&s=cf81f34662d17a047cffba5127ef27d1aa7bc45f   

   Over the past weeks I've been migrating away from JavaScript frontend into a Rust-based TUI and I'm pretty satisfied with how the integration with Ratatui and russh turned out to be:   

   https://asciinema.org/a/EW4DDQocLzK4WwIPE6NbL1jdo   

   Currently the JavaScript side is mostly xterm.js and all of the magic happens in Rust, which means that not only I can more test it better, but also expose over ssh, for all the hackers out there:   

   ssh kartoffels.pwy.io
   

   For next release, I'm planning to focus on the single-player aspect - I'll be introducing a    Challenges    tab where you'll be able to implement bots solving specific problems like navigating a maze, outside of the multi-player zone.   

   Cheers!   
   

======>
https://filtra.io/rust-aug-24
-->>-->>
Rust Jobs Report: August 2024 Welcome to the August 2024 Rust Jobs Report by filtra. Please enjoy our overview of the Rust job market. To add your or another company to the filtra Rust jobs index, please email filtra@filtra.io with the subject line "Rust Index" We are excited to announce that we have begun securing sponsors for the report. As previously mentioned, the addition of sponsors will make the report self-sustaining, and will provide for expansion and improvements. To sponsor the report, please reach out! filtra@filtra.io Are There Jobs in Rust? 801 Oddly, the number of job postings stayed perfectly flat at 801 from July to August. How Many Companies Use Rust? 113 While the number of job openings held steady, the hirer base continued to diversify, with the number of hirers growing by two. What Companies Use Rust Most? Amazon 184 Microsoft 64 IBM 45 DataDog 40 Apple 36 Cloudflare 33 Canonical 26 SpaceX 16 xAI 15 Worldcoin 14 The list of top hirers was shaken up slightly in August. The number of openings at Microsoft nearly halved, while IBM took a big jump up the leaderboard. Also, the generative AI craze has finally come for our leaderboard, with xAI posting 15 jobs. What Other Companies Use Rust? Tesla 14 KeyRock 12 Google 12 Discord 11 GitHub 10 Crypto.com 9 Figma 8 IOHK 7 Okta 7 Deliveroo 6 Syndica 6 HelsingAI 6 Matic 6 Fortanix 6 Mozilla 6 Ardan Labs 5 informal 5 Parity 5 Smarkets 5 Volume Finance 5 Conduit 5 Embark 5 Deep Fence 5 Akamai 5 Hugging Face 4 Heliax 4 Sentry 4 Stockly 4 Dropbox 4 Atlassian 4 Ellipsis Labs 4 Zelis 4 ApolloGraphQL 4 Threema 4 Open Cosmos 3 Svix 3 Axiom 3 Chorus One 3 InfinyOn 3 Aztec 3 HealPay 3 Prisma 3 HyperExponential 3 Vivint 3 OneSignal 3 Scaleway 3 Imperva 3 Mercedes 3 Swift Navigation 3 1Password 3 amo 2 OpenAI 2 Zoo 2 OpenTalk 2 Railway 2 TrueLayer 2 StarkWare 2 LINE 2 PingCAP 2 Zama 2 OVH 2 Osmosis Labs 2 Fullstory 2 Qovery 2 10X Genomics 2 Matter Labs 2 Volka 1 Tonari 1 Zed Industries 1 ZORA 1 Two Sigma 1 Shadow 1 Uniswap Labs 1 Argent 1 Signal 1 AppSignal 1 FP Complete 1 shuttle 1 Qwiet AI 1 Star Lab 1 Ledger 1 Grafbase 1 PayPal 1 Toyota Connected 1 Astropad 1 Ditto 1 Clever Cloud 1 Rapid7 1 Meilisearch 1 KION 1 Cymo 1 Liquid Analytics 1 Qdrant 1 UXStream 1 Immunant 1 Matchday 1 DSCVR 1 Qumulo 1 IOTA Foundation 1 Meta 1 Scythe Robotics 1 InfluxDB 1 AllSpice 1 Our index of Rust companies is always growing, so our list of other hirers is always growing as well. A couple of interesting new companies we found in August were Mercedes and quantitative hedge fund, Two Sigma. If you know of a company that should be on this list but isn't, let us know: filtra@filtra.io. What Industries Use Rust Most? cloud/infrastructure 238 crypto 94 productivity 89 systems/hardware 64 consultancy 52 monitoring/reliability 45 security 38 data science 37 iot/robotics/automotive 29 messaging/notifications 23 The data science category is quickly moving up the list of top industries thanks to the AI-era. Should we make generative AI it's own category? What Other Industries Use Rust? aerospace 19 browser 18 fintech 14 databases 10 marketplace 10 gaming 7 health/biotech 6 social media 3 networking 3 animation 2 Are Rust Jobs Only For Senior Devs? junior 13 mid 458 senior 330 All we can say at this point is, somebody please hire some entry-level Rust devs. There's lots of eager talent waiting. get rust jobs on filtra Data for this edition of the Rust Jobs Report is filtra platform data supplemented with public job postings. Feel free to visit the filtra Rust blog to see past reports. Rust Jobs Report: August 2024 Welcome to the August 2024 Rust Jobs Report by filtra. Please enjoy our overview of the Rust job market. To add your or another company to the filtra Rust jobs index, please email filtra@filtra.io with the subject line "Rust Index"

======>
https://old.reddit.com/r/rust/comments/1ffkl91/new_actor_framework_for_reliable_services_with/
-->>-->>
Actor based async threading.  No Traits needed. Actors are supervised and restarted on any panic. Bounded channels allow for batch processing and SLA management.  Shutdown is clean with cascading solution thru the actors.  Actors can be given dedicated threads or teamed together to share threads.  Built in telemetry with a browser opened to :9100 plus Prometheus metrics for scraping.   Check it out we just cleared 10K downloads.   

   https://crates.io/crates/steady_state   
   

======>
https://dayssincelastrustmcserver.com/
-->>-->>

======>
https://old.reddit.com/r/rust/comments/1ffcilm/understanding_wasm_resources_and_mapping_to_low/
-->>-->>
Could anyone help me to understand a detail about "resources" and how they are mapped to core WASM?   

   I currently have an interface    myinterface    in a package    mypkg    that I'm exporting from a Rust-compiled WASM module. In that interface I have declared a resource called    state   . My idea is, that I could create instances of this resource from my WASM host environment.   

   Now for my questions: I noticed, that wit-bindgen not only generated an exported    mypkg/myinterface#[constructor]state    function but also    imported       [export]mypkg/myinterface#[resource-new]state    and    [export]mypkg/myinterface#[resource-drop]state    functions. I understand that these are part of what's called "canonical built-ins", but what are their purpose? The    [resource-new]state    function seems to be called by the compiled constructor function. From my host environment I currently seem to get away by simply implementing a function that returns the single parameter straight away. The value seems to be a "type index". Is there something I'm missing while doing this? But also, what could be gained from a different implementation?   
   

======>
https://old.reddit.com/r/rust/comments/1fesayw/my_day_at_rustconf/
-->>-->>
I'm going to sleep right after posting this after an equal parts exhausting and insightful day.   

   So, as part of a worldwide social experiment, scientists found a flawless indicator of introversion (programming in Rust) and placed    all of these nerds in the same room   . The result is... actually very enlightening.   

   The talks showed me how much thought was placed in the tools I already take for granted, like    rustfmt   . It showed me new toys to play with (   cargo-mutants    and    rkyv   ), and made me meet amazing people I only ever knew from pixelated profile pictures.   

   For those who were too busy being whipped by their project manager at work, glued to their college courses or who simply didn't have the means to travel to another country, I am presenting a glimpse of what I learned today.   
   

======>
https://old.reddit.com/r/rust/comments/1ff0msk/whats_the_worst_that_can_happen_if_the_code/
-->>-->>
So I’m new to Rust but not to programming, I’ve done a fair bit C#, Java and Python but never something low-level.    

   I figured i would dive in the deep-end and use Rust to code a search-algorithm for a board game. This is a project for a course called Intelligent Search in Games. I’m a graduate student studying Machine Learning.    

   What’s the worst thing that could happen considering I’m learning things on the fly? I encountered lifetimes, the ‘dyn’ keyword, double references and de-referencing thanks the very helpful compiler but i’m not sure i fully grasp them. Rust book and documentation have been helpful    

   I’ve been building unit tests for every struct-impl pair to ensure I’m getting the desired behaviour.   

   So yeah, how likely am to encounter a silent error that just bugs out the whole program or fucks with computer despite my VS Code Devcontainer? Devcontainer is there for convenience rather than safety concerns. Handling dependencies for every separate university and  work codebase became a pain so I’ve started dockerising all projects.     

   I’m wondering if my fears are blown out of proportion because “low-level hard” and “low-level unsafe” (feel free to insert your best caveman voice).    

   TLDR: first time using low level programming language and i went into the “deep-end” and started coding alpha-beta search type algorithms. What’s the worst i could do to my computer? What’s the worst silent bug i could encounter?   

======>
https://old.reddit.com/r/rust/comments/1ffbspu/asking_for_thoughts_on_automerge_loro_other_crtd/
-->>-->>
Let me start off by saying that I have tremendous respect for the authors of automerge. Their work introduced me to the concept of local first software and having access to free and open source software that solves such a difficult problem is truly incredible. With that said...   

   I am building a    local-first    web-app in Rust. I initially started using    automerge    to handle CRDTs but I've not had a great experience. Not to downplay the excellent work done on the project, but there are some serious usability issues. The API is overly difficult to use from Rust (overusing mutable references, reimplementing Null via an enum, using a single error type that contains all possible errors that can happen anywhere in the crate, etc...). It appears that issues are rarely responded to in the github repo. I have an outstanding issue over a month old with no reply, and there are other concerning issues around possible memory leaks and panic behavior are seemingly being ignored. The Rust crate itself has not been updated in 4 months even though the mainline git repo has been receiving some bug fixes. Links to various documentation pages are returning 404s as well. It feels like the project is abandoned on the Rust side, maybe the focus is entirely on shipping via the JS library. I hate to be so harsh because I really appreciate everything being done with the project but I'm at a breaking point debugging the nth unexpected issue I am having.   

   With that said, I've been eying    Loro    as a replacement. It appears to be actively worked on and I really like the API after playing with it briefly. That said, I'd just like to ask here to see what others experiences with it or other CRDT libraries. Any recommendations / thoughts?   
   
======>
https://github.com/patryk27/kartoffel
-->>-->>
Repository files navigation README kartoffel starter pack for a 🥔 kartoffels 🥔
bot usage clone this repository, run ./build and then upload ./kartoffel into the game (if you're more into terminals, there's ssh kartoffels.pwy.io ) note that this repository provides a skeleton robot meant mostly for the in-game
tutorial - it probably won't survive long when deployed onto the battlefield caveat emptor when creating a kartoffel you're implementing a firmware, so you don't have
access to std - no std::fs , no println!() etc. you can communicate through serial_send() , though, and you can use various fancy things like vec or format!() via the alloc crate, just add extern crate alloc; you're given 64 khz cpu and 128 kib of ram, godspeed license cc0 1.0 universal the person who associated a work with this deed has dedicated the work to the
public domain by waiving all of his or her rights to the work worldwide under
copyright law, including all related and neighboring rights, to the extent
allowed by law. you can copy, modify, distribute and perform the work, even for commercial
purposes, all without asking permission.
======>
https://asciinema.org/a/EW4DDQocLzK4WwIPE6NbL1jdo
-->>-->>
Get started Explore Docs Blog Forum Donate Hire me! Log in

                / Sign up |---------| |.. ↑ .||.| id |.........| |.. @ .||.| a2bc-4e7c-b02d-3be8 |-----|---|.........|------|---|----------....-|.|---- |................. @ .............. @ ........ @ ........... status |.....|........... ↓ ......... ↑ .... @→ ....... ↓ .......|--- alive (7s) |..... ←@ .......... @ ......... @ ..|-----|............| > score: 1 |.....|--|.|------|.|------|...|-----|............| |.....| |.| |.| |.............. @ ...... ↑ | serial port | @ ....| |.| |.| |...|-----|.... ↓ ...... @ |--- construct exec: 1 | ↓ ---.| |.| |.| |...| |........ @ @ ←@ . ←@ . poll one: 13 |.| |.| |.| |.| |...| |. @→ ..... ↓ ↓ ..|--- 0 tick wait: 6 |.| |.| |.| |.---| |...| |---...----.-| 4! |.| |.| |.| | @ ...| |...| |...| |.| |.| | @→ |.| | ↓ ...| | @ . ↑ | |...| |.| |.| |.||--.---| |....| | ↓ . @ | |...| |.| |.| | ↑ ||......| |....| |..--| |...| |.| |.| | @ ||......| |....| |..| |...| |.| |---.---.-|......|---|....| |..| |...| |.----- |.... @→ ...................| |..| |...| |..... |............. @→ @→ ---|-.--| |..---| |...| |..... |................|-----.------.....|---|----...----|..... |........................................................ |......... @→ ....................... @→ .................... |....|-|.||..... @ |----| ↑ |----|.....|---|........ @ ........ |- ←@ .| |.||..... ↓ |----| @ |-----.....|---|...... @ | ↓ --|---.- |...| |.||................................... ↓ | |.| |...| |.||......|----|.|-----..-------|.......| |.| |...| |.||......| |.| |..| |.......| |.| |...| |.||. @→ ...| |.| |..| |.......| | @ | ←@ ..| |.||......| |.| |..| |..... @→ | | ↓ | |.. ↑ | |.||--.-.-| |.| |--..| |.......| |.| |.. @ | |.| |...| |.| |....| |...... @→ |.| |---...| |.| |...| |.| |... @ | |-- ↑ -.-.| ←@ | |.. @ ...| |.| |. ↑ .| |.| |.. ←@ | | @ ....| |.| | @→ ↓ ...| |.-- ↑ -. @ .|-----|.|--|....| |.....| |.| [ f ] stop following |......|-|... @ .. ←@ ............. @→ .|--------|.....|------|.| [ l ] leave [ esc ] go back  [ spc ] pause  [ h ] help  [ b ] bots 00:00 -00:45 Fullscreen (f) untitled by pwychowaniec 11 hours ago Share Download .cast - original recording .txt - plain text version .gif - animated GIF GNU/Linux ◆ xterm-kitty ◆ zsh 215 views Share this recording × Link Append ?t=30 to start the playback at 30s, ?t=3:20 to start the playback at 3m 20s. Embed image link Use snippets below to display a screenshot linking to this recording. Useful in places where scripts are not allowed (e.g. in a project's README file). HTML: Markdown: Embed the player If you're embedding on your own page or on a site which permits script tags,
          you can use the full player widget: Paste the above script tag where you want the player to be displayed on your page. See embedding docs for additional options. Download this recording × You can download this recording in asciicast v2 format , as a .cast file. Download Replay in terminal You can replay the downloaded recording in your terminal using the asciinema play command: asciinema play 675773.cast If you don't have asciinema CLI installed then see installation instructions . Use with stand-alone player on your website Download asciinema player from the releases page (you only need .js and .css file), then use it like this: <!DOCTYPE html>
<html>
<head>
  <link rel="stylesheet" type="text/css" href="asciinema-player.css" />
</head>
<body>
  <div id="player"></div>
  <script src="asciinema-player.min.js"></script>
  <script>
    AsciinemaPlayer.create(
      '/assets/675773.cast',
      document.getElementById('player'),
      { cols: 128, rows: 37 }
    );
  </script>
</body>
</html> See asciinema player quick-start guide for full usage instructions. Generate GIF from this recording × While this site doesn't provide GIF conversion at the moment, you can
          still do it yourself with the help of asciinema GIF generator utility - agg . Once you have it installed, generate a GIF with the following
            command: agg https://asciinema.org/a/EW4DDQocLzK4WwIPE6NbL1jdo demo.gif Or, if you already downloaded the recording file: agg demo.cast demo.gif Check agg --help for all available options. You can change font
          family and size, select color theme, adjust speed and more. See agg manual for
          full usage instructions. window.addEventListener('load', async function() {
    const container = document.getElementById('cinema');
    const opts = {"cols":128,"customTerminalFontFamily":null,"idleTimeLimit":null,"markers":null,"poster":"data:text/plain,\u001B[48;2;9;9;9;38;2;240;240;240m                                                           \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|---------|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m                    \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|..\u001B[0m\u001B[48;2;9;9;9;38;2;43;255;0m↑\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m.||.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m     \u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240;4mid\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m                      \u001B[0m\r\n\u001B[48;2;9;9;9;38;2;240;240;240m                                                           \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.........|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m                    \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|..\u001B[0m\u001B[48;2;9;9;9;38;2;43;255;0m@\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m.||.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m     \u001B[0m\u001B[48;2;9;9;9;38;2;255;0;68ma2bc-4e7c-b02d-3be8\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m     \u001B[0m\r\n\u001B[48;2;9;9;9;38;2;240;240;240m                                                 \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|-----|---|.........|------|---|----------....-|.|----\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m                         \u001B[0m\r\n\u001B[48;2;9;9;9;38;2;240;240;240m                                                 \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.................\u001B[0m\u001B[48;2;9;9;9;38;2;38;255;0m@\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m..............\u001B[0m\u001B[48;2;9;9;9;38;2;255;43;0m@\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m........\u001B[0m\u001B[48;2;9;9;9;38;2;255;0;8m@\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m...........\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m \u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240;4mstatus\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m                  \u001B[0m\r\n\u001B[48;2;9;9;9;38;2;240;240;240m                                                 \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.....|...........\u001B[0m\u001B[48;2;9;9;9;38;2;38;255;0m↓\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m.........\u001B[0m\u001B[48;2;9;9;9;38;2;255;17;0m↑\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m....\u001B[0m\u001B[48;2;9;9;9;38;2;255;242;0m@→\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m.......\u001B[0m\u001B[48;2;9;9;9;38;2;255;0;8m↓\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m.......|---\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m \u001B[0m\u001B[48;2;9;9;9;38;2;0;255;128malive \u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m(7s)              \u001B[0m\r\n\u001B[48;2;9;9;9;38;2;240;240;240m                                                 \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.....\u001B[0m\u001B[48;2;9;9;9;38;2;234;0;255m←@\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m..........\u001B[0m\u001B[48;2;9;9;9;38;2;255;89;0m@\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m.........\u001B[0m\u001B[48;2;9;9;9;38;2;255;17;0m@\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m..|-----|............|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m    \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m> score: 1\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m              \u001B[0m\r\n\u001B[48;2;9;9;9;38;2;240;240;240m                                                 \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.....|--|.|------|.|------|...|-----|............|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m                            \u001B[0m\r\n\u001B[48;2;9;9;9;38;2;240;240;240m                                                 \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.....|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m  \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m      \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m      \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|..............\u001B[0m\u001B[48;2;9;9;9;38;2;0;255;72m@\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m......\u001B[0m\u001B[48;2;9;9;9;38;2;0;204;255m↑\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m    \u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240;4mserial port\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m             \u001B[0m\r\n\u001B[48;2;9;9;9;38;2;240;240;240m                                                 \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|\u001B[0m\u001B[48;2;9;9;9;38;2;64;255;0m@\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m....|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m  \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m      \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m      \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|...|-----|....\u001B[0m\u001B[48;2;9;9;9;38;2;0;255;72m↓\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m......\u001B[0m\u001B[48;2;9;9;9;38;2;0;204;255m@\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|---\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m construct exec: 1       \u001B[0m\r\n\u001B[48;2;9;9;9;38;2;240;240;240m                                                 \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|\u001B[0m\u001B[48;2;9;9;9;38;2;64;255;0m↓\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m---.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m  \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m      \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m      \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|...|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m     \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|........\u001B[0m\u001B[48;2;9;9;9;38;2;255;0;34m@\u001B[0m\u001B[48;2;9;9;9;38;2;255;0;51m@\u001B[0m\u001B[48;2;9;9;9;38;2;4;0;255m←@\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m.\u001B[0m\u001B[48;2;9;9;9;38;2;255;234;0m←@\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m.\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m poll one: 13            \u001B[0m\r\n\u001B[48;2;9;9;9;38;2;240;240;240m                                                 \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m  \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m      \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m      \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|...|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m     \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.\u001B[0m\u001B[48;2;9;9;9;38;2;242;0;255m@→\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m.....\u001B[0m\u001B[48;2;9;9;9;38;2;255;0;34m↓\u001B[0m\u001B[48;2;9;9;9;38;2;255;0;51m↓\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m..|---\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m 0 tick wait: 6          \u001B[0m\r\n\u001B[48;2;9;9;9;38;2;240;240;240m                                                 \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m  \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m      \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.---|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m   \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|...|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m     \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|---...----.-|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m    4!                      \u001B[0m\r\n\u001B[48;2;9;9;9;38;2;240;240;240m                                                 \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m  \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m      \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|\u001B[0m\u001B[48;2;9;9;9;38;2;238;0;255m@\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m...|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m   \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|...|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m        \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|...|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m  \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m                             \u001B[0m\r\n\u001B[48;2;9;9;9;38;2;240;240;240m                                                 \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|\u001B[0m\u001B[48;2;9;9;9;38;2;255;0;4m@→\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m  \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m      \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|\u001B[0m\u001B[48;2;9;9;9;38;2;238;0;255m↓\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m...|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m   \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|\u001B[0m\u001B[48;2;9;9;9;38;2;255;81;0m@\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m.\u001B[0m\u001B[48;2;9;9;9;38;2;21;0;255m↑\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m        \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|...|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m  \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m                             \u001B[0m\r\n\u001B[48;2;9;9;9;38;2;240;240;240m                                                 \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.||--.---|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m   \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|....|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m   \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|\u001B[0m\u001B[48;2;9;9;9;38;2;255;81;0m↓\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m.\u001B[0m\u001B[48;2;9;9;9;38;2;21;0;255m@\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m        \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|...|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m  \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m                             \u001B[0m\r\n\u001B[48;2;9;9;9;38;2;240;240;240m                                                 \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|\u001B[0m\u001B[48;2;9;9;9;38;2;255;0;123m↑\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m||......|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m   \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|....|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m  \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|..--|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m        \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|...|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m  \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m                             \u001B[0m\r\n\u001B[48;2;9;9;9;38;2;240;240;240m                                                 \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|\u001B[0m\u001B[48;2;9;9;9;38;2;255;0;123m@\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m||......|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m   \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|....|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m  \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|..|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m          \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|...|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m  \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m                             \u001B[0m\r\n\u001B[48;2;9;9;9;38;2;240;240;240m                                              \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|---.---.-|......|---|....|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m  \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|..|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m          \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|...|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m  \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.-----\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m                         \u001B[0m\r\n\u001B[48;2;9;9;9;38;2;240;240;240m                                              \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|....\u001B[0m\u001B[48;2;9;9;9;38;2;255;0;68m@→\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m...................|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m  \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|..|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m          \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|...|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m   \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.....\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m                         \u001B[0m\r\n\u001B[48;2;9;9;9;38;2;240;240;240m                                              \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.............\u001B[0m\u001B[48;2;9;9;9;38;2;0;225;255m@→\u001B[0m\u001B[48;2;9;9;9;38;2;13;0;255m@→\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m---|-.--|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m  \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|..---|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m       \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|...|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m   \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.....\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m                         \u001B[0m\r\n\u001B[48;2;9;9;9;38;2;240;240;240m                                              \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|................|-----.------.....|---|----...----|.....\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m                         \u001B[0m\r\n\u001B[48;2;9;9;9;38;2;240;240;240m                                              \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|........................................................\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m                         \u001B[0m\r\n\u001B[48;2;9;9;9;38;2;240;240;240m                                              \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.........\u001B[0m\u001B[48;2;9;9;9;38;2;255;0;166m@→\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m.......................\u001B[0m\u001B[48;2;9;9;9;38;2;0;191;255m@→\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m....................\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m                         \u001B[0m\r\n\u001B[48;2;9;9;9;38;2;240;240;240m                                              \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|....|-|.||.....\u001B[0m\u001B[48;2;9;9;9;38;2;21;0;255m@\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|----|\u001B[0m\u001B[48;2;9;9;9;38;2;162;0;255m↑\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|----|.....|---|........\u001B[0m\u001B[48;2;9;9;9;38;2;0;255;204m@\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m........\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m                         \u001B[0m\r\n\u001B[48;2;9;9;9;38;2;240;240;240m                                              \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|-\u001B[0m\u001B[48;2;9;9;9;38;2;0;115;255m←@\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.||.....\u001B[0m\u001B[48;2;9;9;9;38;2;21;0;255m↓\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|----|\u001B[0m\u001B[48;2;9;9;9;38;2;162;0;255m@\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|-----.....|---|......\u001B[0m\u001B[48;2;9;9;9;38;2;255;0;136m@\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|\u001B[0m\u001B[48;2;9;9;9;38;2;0;255;204m↓\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m--|---.-\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m                         \u001B[0m\r\n\u001B[48;2;9;9;9;38;2;240;240;240m                                               \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|...|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.||...................................\u001B[0m\u001B[48;2;9;9;9;38;2;255;0;136m↓\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m      \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m                         \u001B[0m\r\n\u001B[48;2;9;9;9;38;2;240;240;240m                                               \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|...|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.||......|----|.|-----..-------|.......|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m      \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m                         \u001B[0m\r\n\u001B[48;2;9;9;9;38;2;240;240;240m                                               \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|...|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.||......|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m    \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m    \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|..|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m      \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.......|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m      \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m                         \u001B[0m\r\n\u001B[48;2;9;9;9;38;2;240;240;240m                                               \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|...|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.||.\u001B[0m\u001B[48;2;9;9;9;38;2;255;191;0m@→\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m...|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m    \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m    \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|..|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m      \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.......|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m      \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|\u001B[0m\u001B[48;2;9;9;9;38;2;119;0;255m@\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m                         \u001B[0m\r\n\u001B[48;2;9;9;9;38;2;240;240;240m                                               \u001B[0m\u001B[48;2;9;9;9;38;2;0;68;255m←@\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m..|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.||......|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m    \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m    \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|..|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m      \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.....\u001B[0m\u001B[48;2;9;9;9;38;2;251;0;255m@→\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m      \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|\u001B[0m\u001B[48;2;9;9;9;38;2;119;0;255m↓\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m                         \u001B[0m\r\n\u001B[48;2;9;9;9;38;2;240;240;240m                                               \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|..\u001B[0m\u001B[48;2;9;9;9;38;2;255;183;0m↑\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.||--.-.-|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m    \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m  \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|--..|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m      \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.......|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m      \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m                         \u001B[0m\r\n\u001B[48;2;9;9;9;38;2;240;240;240m                                               \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|..\u001B[0m\u001B[48;2;9;9;9;38;2;255;183;0m@\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m  \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|...|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m     \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m  \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|....|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m      \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|......\u001B[0m\u001B[48;2;9;9;9;38;2;255;0;238m@→\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m      \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m                         \u001B[0m\r\n\u001B[48;2;9;9;9;38;2;240;240;240m                                            \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|---...|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m  \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|...|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m     \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m  \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|...\u001B[0m\u001B[48;2;9;9;9;38;2;0;59;255m@\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m      \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|--\u001B[0m\u001B[48;2;9;9;9;38;2;191;255;0m↑\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m-.-.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m      \u001B[0m\u001B[48;2;9;9;9;38;2;255;0;123m←@\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m                         \u001B[0m\r\n\u001B[48;2;9;9;9;38;2;240;240;240m                                            \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|..\u001B[0m\u001B[48;2;9;9;9;38;2;0;183;255m@\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m...|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m  \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.\u001B[0m\u001B[48;2;9;9;9;38;2;0;255;30m↑\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m     \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m  \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|..\u001B[0m\u001B[48;2;9;9;9;38;2;110;255;0m←@\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m        \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|\u001B[0m\u001B[48;2;9;9;9;38;2;191;255;0m@\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m....|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m      \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m                         \u001B[0m\r\n\u001B[48;2;9;9;9;38;2;240;240;240m                                            \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|\u001B[0m\u001B[48;2;9;9;9;38;2;208;255;0m@→\u001B[0m\u001B[48;2;9;9;9;38;2;0;183;255m↓\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m...|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.--\u001B[0m\u001B[48;2;9;9;9;38;2;0;255;9m↑\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m-.\u001B[0m\u001B[48;2;9;9;9;38;2;0;255;30m@\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m.|-----|.|--|....|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m        \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.....|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m      \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m [\u001B[0m\u001B[48;2;9;9;9;1;38;2;0;255;128mf\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m] stop following      \u001B[0m\r\n\u001B[48;2;9;9;9;38;2;240;240;240m                                            \u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m|......|-|...\u001B[0m\u001B[48;2;9;9;9;38;2;0;255;9m@\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m..\u001B[0m\u001B[48;2;9;9;9;38;2;42;0;255m←@\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m.............\u001B[0m\u001B[48;2;9;9;9;38;2;0;149;255m@→\u001B[0m\u001B[48;2;9;9;9;38;2;128;128;128m.|--------|.....|------|.|\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m [\u001B[0m\u001B[48;2;9;9;9;1;38;2;0;255;128ml\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m] leave               \u001B[0m\r\n\u001B[48;2;9;9;9;38;2;240;240;240m  [\u001B[0m\u001B[48;2;9;9;9;1;38;2;0;255;128mesc\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m] go back  [\u001B[0m\u001B[48;2;9;9;9;1;38;2;0;255;128mspc\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m] pause  [\u001B[0m\u001B[48;2;9;9;9;1;38;2;0;255;128mh\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m] help  [\u001B[0m\u001B[48;2;9;9;9;1;38;2;0;255;128mb\u001B[0m\u001B[48;2;9;9;9;38;2;240;240;240m] bots                                                                                \u001B[0m\u001B[?25l","rows":37,"speed":null,"terminalLineHeight":null,"theme":"asciinema"};

    const player = await window.createPlayer(
"/a/EW4DDQocLzK4WwIPE6NbL1jdo.cast",
      container,
      {
        ...opts,
        fit: 'both',
        preload: true,
        logger: console
      }
    );

    player.addEventListener('resize', ({ cols, rows }) => {
      container.style.height = window.cinemaHeight(cols, rows);
    });
  }); About Terms of Service Privacy Policy Hosted by Mastodon Forum Matrix IRC
======>
https://crates.io/crates/steady_state
-->>-->>
steady_state v0.0.21 Framework for building long running low latency actor based services on Linux. Provides visual telemetry to watch data flows between actors. Uses Erlang style supervisors to defend against panics and uses non blocking async ringbuffers for inter actor communication. Readme 21 Versions Dependencies Dependents Metadata about 2 hours ago MIT 211 KiB Install Run the following Cargo command in your project directory: cargo add steady_state Or add the following line to your Cargo.toml: steady_state = "0.0.21" Documentation docs.rs/steady_state/0.0.19/steady_state Repository github.com/kmf-lab/steady-state-stack Owners Report crate Stats Overview 10,181 Downloads all time 21 Versions published Downloads over the last 90 days Display as Stacked Stacked Unstacked Loading…
======>
https://oneirical.github.io/rustconf1/
-->>-->>
Oneirical blog tags archive about me github My Day at the Rust Conference - because let's grab all the most hardcore introverts in the world and put them in the same room, why not 2024-09-11 :: tags: #rust #rustconf Being a part of the technology community means developing relationships with wizards thousands of kilometres away. It is a simultaneously lonely and connected feeling. And then, sometimes, all those threads converge in a single point. One becomes able to look in the eye and smile at all those distant mentors, friends and co-collaborators we shared our work with. That place, for me, today, is RustConf. I'm looking forward to tomorrow, another full day of learning and sharing. But for the souls who couldn't make it, here is a diary of the day's experiences - and, for those who did make it, well, a different perspective from their own may be appreciated. Artificial Incompetence No, to Hell with "chronological order". This is the penultimate talk I listened to today, about the crate cargo-mutants . I'm bringing it up first because I thought the technology was really cool. Plus, it's something readers of the blog can probably play with right now! This is not a new concept. However, this Rust-specific implementation matches harmoniously with the language's robustness. Running cargo mutants in your command line will immediately summon an imaginary software developer intern who will proceed to butcher your testing suite code and implement horrible bugs. This is expressed by: Replacing operators (such as && with || , or += with -= ) Replacing functions with a return type with an arbitrary variation of that return type. Example of the latter: get_cute_otters() returns a -> Option<usize> . cargo-mutants will transform calls of this function like this: - assert_eq!(get_cute_otters(), Some(3)); + assert_eq!(Some(0), Some(3)); + // or + assert_eq!(None, Some(3)); cargo-mutants will then raise a warning for any mutation attempt that did not break tests and cause them to fail. After all, if randomly slamming the keyboard on your test suite is labeled as "perfectly fine" by cargo test , it may be time for some detective work. In my opinion, this does not seem like cargo clippy where one should aim for absolutely 0 warnings. After all, replacing make_sure_this_returns_true_otherwise_existence_will_be_erased() with true should keep the tests passing. Rather, it's an invitation to review potential sources of error and look at your implementation with fresh eyes. Remember, the developer who wrote the code is usually the one also writing the tests. That means absolutely nothing is stopping them from having a blind spot and making the same mistake twice. Between Sky And Sea There is this notion in the technology world that user interface designers are the tip of the iceberg - and the part of development the uninitiated are most acquainted with - while the Atlantean civilization beyond mortal understanding at the bottom of the sea (also known as "kernel and compiler developers") stays hidden from view. There is another world, one which seems to grow year after year. The network architects, the database connectors, the cloud computing specialists - the ones who recite eldritch formulas like "Mongo", "Postgres" or "Kubernetes" and cast the Summon Money spell. (Unfortunately, Summon Greater Money requires making a pact with an archfiend, such as Microgle or Goosoft). Two of the talks I attended today were about the connection between a massive database and a user-facing customer application: A MongoDB driver to asynchronously carry data from client to server A web interactive map that tracks public transit, called Catenary and which needs to communicate with city APIs that potentially all use conflicting data formats I was quite awed by what I witnessed. However: Interestingly, while most talks were "here is how you can use this Rust tool/feature in your own project", these two stood out from the lot by being "here is this cool thing we built using Rust". Because the audience of RustConf was composed of Rust developers (I hope), I imagine presenting a project like this would require fighting a little harder to keep the audience's interest. The talks had a "walk me through your call stack" feel, especially the MongoDB one. This is a really deep dive - and therefore technically interesting to anyone with specialized experience wishing to do something like this on their own. But, for those more familiar with different realms of computing, I felt a bit like constantly journeying deeper in a thick forest, and asking "Where did I come from"? A word of appreciation to the Catenary panelist for having bilingual (English/French) slides in his presentation - I felt honoured by this nod to the culture of my home city (Montréal). Interlude Dear people who code during a coding conference: please show mercy. Please indicate which sacrifices are required to satiate your eldritch thirst. Your zeal is beyond human comprehension. All That Work Because I'm Too Lazy To Press One Key I truly got to appreciate rustfmt last summer when contributing to the Rust central repository for my Makefile rewrite project . The CI job known as tidy isn't too enthusiastic about my lines of code spanning the entire circumference of Earth in their length. Today, I got to witness just how many cogs start turning when I mindlessly type ":w" (yes, not Ctrl-S, I know, I'm so 1337 ) and see all the little words satisfyingly snap into place.
First, the talk mentioned that mere strings are not sufficient to direct proper formatting. rustfmt needs to generate its own IR (intermediate representation) - a concept normally reserved to compilers - and have a rough understanding of the code's logic to then output back a fully formatted string sequence corresponding exactly to the parsed, messy string. There is zero room for error - a formatter changing the way code is interpreted by the compiler, even in an extremely subtle way, would be a sad way to crash the latest Blazingly Fast™ NASA satellite written by an excited Rustacean intern. Because of this parity requirement, some dilemmas arise: struct Otter { eyes : Vec<Eye>, tail : Tail, // Don't worry, the Tail field can be removed later. cute : bool , } Let's say that this comment is too long and must be moved to the line under or above. But how can you choose? The formatter doesn't understand English. ( Unless your compiler is simultaneously a chatbot - opinions on the genius and/or lunacy of such a technology will not be the subject of this post). Compilers don't have to take comments into account, formatters do. Next, there are macros. They appear in their non-extended state to the formatter, while the compiler sees them in their fully unrolled state. With this mismatch, formatting in such a way that won't cause a difference in the way the compiler parses your code is another challenge. I really appreciated this talk. It shed light on how complex some of the quality-of-life tools we use can be. Interlude Yes. Let's have two conference rooms. One larger than the Sun with hundreds of chairs, and the other requiring a microscope to properly see. And let's put all the more technical panels in the small room. It will fill right up in milliseconds and the nerds will be sent to listen to the other talk. Hmph. Sorry. Venting over. Merge And Release, On Stage I used to think there was an inverse correlation between technical skill and the ability to teach it. All seconds spent learning how to teach are spent not learning the material, are they not? After the presentation on rkyv , I acknowledge there may be exceptions to this rule. First, I must admit it took me an unreasonable amount of time until I realized it's called rkyv because it sounds like "archive" when you pronounce it. Before this revelation came unto me, I constantly mispelled it as "rykv" or "rkvy". Now that this is out of the way, I loved this presentation. I simply must honour the charisma in running cargo publish to ship 0.8 to crates.io live on stage, a version that the panelist worked on for the last 2.5 years. rkyv is a zero-copy deserialization framework for Rust. A deserialization crate without the deserialization part. A rawer, more performant version of Serde, if you will. Not that the archives it outputs are human-readable, unlike the latter. The concept itself is extremely simple at its core. Take data (like a struct), shove it in a [u8] (slice of bytes), and unpack later. This sounds so simple I wondered why it wasn't more widespread, until I was presented how uncanny some of the edge cases can get: Absolute pointers like *const cannot be arbitrarily shoved in a slice, as they contain a memory address. Wrap them up nicely in a Box , perhaps? Now, you must deal with machine-specific endianness, because some computers read left-to-right and others right-to-left. Small tangent: grabbing Arabic numbers from the Arabs and not keeping the right-to-left reading direction (specifically for numbers) was a mistake. Let's say I present to you the number 5XXX(an n number of further X digits). What's that? Can't see the last digits? I'm hiding them with the palm of my metaphorical hand, tough luck. With big-endian (left-to-right), all you know is that it starts with 5, but you're not even sure if that's a 5000 or a 500 000. With little-endian (right-to-left), you know that the number ends with 5 and is therefore divisible by 5. More data collected per digit! Anyhow. The live-published on stage version, 0.8, fixes this irregularity by enforcing endianness and wrapping of absolute pointers automatically. Go try it in your projects! Perhaps you'll be happy with the performance gains. I loved the final optimistic note of this talk. The developer promised to release in one year... back in 2022. Then, he was reminded of the often forgotten truth in software development that "80% done is actually 20% done" and got stuck for a while. But. During all that time, rkyv stayed. It didn't regress, it didn't rot. It just waited for the right time. And that time came, today. That makes me feel a lot better about my own abandoned on-hiatus projects. Conclusion It's not over. I'll be back tomorrow for more fun, more networking, more crab pinching with the hand to fire up the audience. I'll be giving a small "community talk" about my Rustc test suite rewrite project at 14:45 (2:45 PM) in the tiny room connected to the main ballroom. I'd be delighted to see familiar (or new!) faces. This has been an amazing day. Reddit: u/oneirical Discord: oneirical ← Unmaking the Makefiles - exorcising the Rust compiler test suite one file at a time © 
    2024
 Julien Robert :: Theme: Terminimal by pawroman
======>
https://www.reddit.com/r/rust/s/OONTQpZYEj
-->>-->>
Related Rust Programming open-source software Technology Free software Software Information & communications technology forward back r/rust r/rust A place for all things related to the Rust programming language—an open-source systems language that emphasizes performance, reliability, and productivity. 310K Members 148 Online Rust to .NET compiler - end of GSoC, what now? 177 upvotes · 19 comments r/rust r/rust A place for all things related to the Rust programming language—an open-source systems language that emphasizes performance, reliability, and productivity. 310K Members 148 Online The amazing pattern I discovered - HashMap with multiple static types 146 upvotes · 31 comments r/rust r/rust A place for all things related to the Rust programming language—an open-source systems language that emphasizes performance, reliability, and productivity. 310K Members 148 Online Talk - Introduction to axum (web framework) youtube 103 upvotes · 25 comments Promoted r/rust r/rust A place for all things related to the Rust programming language—an open-source systems language that emphasizes performance, reliability, and productivity. 310K Members 148 Online Is just me or Rust is too heavy for my computer to handle? 90 upvotes · 92 comments r/rust r/rust A place for all things related to the Rust programming language—an open-source systems language that emphasizes performance, reliability, and productivity. 310K Members 148 Online New Tokio blog post: Announcing Axum - Web framework that focuses on ergonomics and modularity 611 upvotes · 117 comments r/rust r/rust A place for all things related to the Rust programming language—an open-source systems language that emphasizes performance, reliability, and productivity. 310K Members 148 Online Minimalist Guide to Axum 142 upvotes · 23 comments r/rust r/rust A place for all things related to the Rust programming language—an open-source systems language that emphasizes performance, reliability, and productivity. 310K Members 148 Online A wgpu-based backend for ratatui 100 upvotes · 1 comment r/rust r/rust A place for all things related to the Rust programming language—an open-source systems language that emphasizes performance, reliability, and productivity. 310K Members 148 Online Announcing axum 0.3 twitter 306 upvotes · 66 comments Promoted r/rust r/rust A place for all things related to the Rust programming language—an open-source systems language that emphasizes performance, reliability, and productivity. 310K Members 148 Online Which Rust web framework to choose in 2022 (with code examples) kerkour 465 upvotes · 86 comments r/rust r/rust A place for all things related to the Rust programming language—an open-source systems language that emphasizes performance, reliability, and productivity. 310K Members 148 Online What would you present to C++ developers interested in Rust? 113 upvotes · 126 comments r/rust r/rust A place for all things related to the Rust programming language—an open-source systems language that emphasizes performance, reliability, and productivity. 310K Members 148 Online Bon builder generator 2.0 release 🎉 142 upvotes · 16 comments r/rust r/rust A place for all things related to the Rust programming language—an open-source systems language that emphasizes performance, reliability, and productivity. 310K Members 148 Online Could rust theoretically achieve better optimisation with a costum backend, that takes more advantage of the rich type system Information that LLVM? 101 upvotes · 40 comments r/rust r/rust A place for all things related to the Rust programming language—an open-source systems language that emphasizes performance, reliability, and productivity. 310K Members 148 Online The rust_xlsxwriter crate for creating xlsx files 244 upvotes · 30 comments r/rust r/rust A place for all things related to the Rust programming language—an open-source systems language that emphasizes performance, reliability, and productivity. 310K Members 148 Online Rust bindings for the German tax library 288 upvotes · 16 comments r/rust r/rust A place for all things related to the Rust programming language—an open-source systems language that emphasizes performance, reliability, and productivity. 310K Members 148 Online From Python to Rust: My Hobby Projects and Why I’m Sticking with Rust 131 upvotes · 18 comments r/rust r/rust A place for all things related to the Rust programming language—an open-source systems language that emphasizes performance, reliability, and productivity. 310K Members 148 Online A novel O(1) Key-Value Store - CandyStore 113 upvotes · 44 comments r/rust r/rust A place for all things related to the Rust programming language—an open-source systems language that emphasizes performance, reliability, and productivity. 310K Members 148 Online What does memory-safe *actually* mean 128 upvotes · 103 comments r/rust r/rust A place for all things related to the Rust programming language—an open-source systems language that emphasizes performance, reliability, and productivity. 310K Members 148 Online How we made doctests so much faster 217 upvotes · 20 comments r/rust r/rust A place for all things related to the Rust programming language—an open-source systems language that emphasizes performance, reliability, and productivity. 310K Members 148 Online Title: Announcing Plotlars: Simplify Your Data Visualization Workflow in Rust! 🦀📊 155 upvotes · 36 comments r/rust r/rust A place for all things related to the Rust programming language—an open-source systems language that emphasizes performance, reliability, and productivity. 310K Members 148 Online If you were the interviewer, what Rust questions would you ask? 147 upvotes · 114 comments r/rust r/rust A place for all things related to the Rust programming language—an open-source systems language that emphasizes performance, reliability, and productivity. 310K Members 148 Online Rust as a first language is hard… but I like it. 198 upvotes · 76 comments r/rust r/rust A place for all things related to the Rust programming language—an open-source systems language that emphasizes performance, reliability, and productivity. 310K Members 148 Online An Optimization That's Impossible in Rust! 421 upvotes · 160 comments r/rust r/rust A place for all things related to the Rust programming language—an open-source systems language that emphasizes performance, reliability, and productivity. 310K Members 148 Online Read the rust book! 124 upvotes · 29 comments r/rust r/rust A place for all things related to the Rust programming language—an open-source systems language that emphasizes performance, reliability, and productivity. 310K Members 148 Online Burn 0.14.0 Released: The First Fully Rust-Native Deep Learning Framework 357 upvotes · 67 comments r/rust r/rust A place for all things related to the Rust programming language—an open-source systems language that emphasizes performance, reliability, and productivity. 310K Members 148 Online Rust to .NET compiler - now passing 95.02 % of unit tests in std. 587 upvotes · 40 comments
======>
https://docs.rs/automerge/latest/automerge/
-->>-->>
use automerge::{ObjType, AutoCommit, transaction::Transactable, ReadDoc}; let mut doc = AutoCommit::new(); // `put_object` creates a nested object in the root key/value map and
// returns the ID of the new object, in this case a list. let contacts = doc.put_object(automerge::ROOT, "contacts" , ObjType::List) ? ; // Now we can insert objects into the list let alice = doc.insert_object( & contacts, 0 , ObjType::Map) ? ; // Finally we can set keys in the "alice" map doc.put( & alice, "name" , "Alice" ) ? ;
doc.put( & alice, "email" , "alice@example.com" ) ? ; // Create another contact let bob = doc.insert_object( & contacts, 1 , ObjType::Map) ? ;
doc.put( & bob, "name" , "Bob" ) ? ;
doc.put( & bob, "email" , "bob@example.com" ) ? ; // Now we save the address book, we can put this in a file let data: Vec<u8> = doc.save();
======>
https://docs.rs/loro/latest/loro/index.html
-->>-->>
use loro::{LoroDoc, LoroList, LoroText, LoroValue, ToJson}; use serde_json::json; let doc = LoroDoc::new(); let map = doc.get_map( "map" );
map.insert( "key" , "value" ).unwrap();
map.insert( "true" , true ).unwrap();
map.insert( "null" , LoroValue::Null).unwrap();
map.insert( "deleted" , LoroValue::Null).unwrap();
map.delete( "deleted" ).unwrap(); let list = map.insert_container( "list" , LoroList::new()).unwrap();
list.insert( 0 , "List" ).unwrap();
list.insert( 1 , 9 ).unwrap(); let text = map.insert_container( "text" , LoroText::new()).unwrap();
text.insert( 0 , "Hello world!" ).unwrap(); assert_eq! (
    doc.get_deep_value().to_json_value(), json! ({ "map" : { "key" : "value" , "true" : true , "null" : null, "list" : [ "List" , 9 ], "text" : "Hello world!" }
    })
);
